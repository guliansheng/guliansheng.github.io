{"meta":{"title":"欢迎来到前端学习博客!","subtitle":null,"description":"前端学习博客，主要以JavaScript为主进行展开，其中包括JavaScript基础和相关框架(jQuery、bootstrap、vue...)的讲解和使用，另外还有与前端相关知识的扩展，如git、github、webpack、hexo...","author":"guliansheng","url":"http://www.guliansheng.club"},"pages":[{"title":"个人简介","date":"2019-11-01T03:19:09.000Z","updated":"2019-11-13T09:09:27.012Z","comments":false,"path":"about/index.html","permalink":"http://www.guliansheng.club/about/index.html","excerpt":"","text":"基本信息 姓名：顾连生 性别：男 出生年月：1995年1月 居住地：杭州 学历：本科 联系方式：18815689115 电子邮件：1229303942@qq.com GitHub地址：https://github.com/guliansheng 码云地址：https://gitee.com/guliansheng 求职意向 目标职业：web前端开发 到岗时间：随时 工资：面议 专业能力1、熟练掌握HTML5、CSS3、JavaScript相关的知识。 2、熟悉CSS的预处理器Less、Sass。 3、熟悉ES6语法，熟练使用Ajax进行前后端交互。 4、掌握jQuery、Bootstrap、Lodash等前端库。 5、熟练掌握Vue.js框架，能够编写基于element、iview、vue、vue-router、vuex、axios的单页应用。 6、熟练掌握React框架，并能够使用ant-design-pro编写管理系统应用。 7、熟悉小程序开发，能够使用mpvue框架搭建小程序应用。 8、熟练使用webpack进行前端自动化及项目构建。 9、熟练使用Git管理项目，并与GitHub远程仓库进行交互。 10、熟练使用主流的IDE工具，如：IntelliJ IDEA、Visual Studio Code、Sublime等。 11、了解Node.js及 Express框架。 教育 就读学校：阜阳师范大学 就读时间：2015年9月至2019年6月 就读专业：信息管理与信息系统 自我评价 热爱前端并希望成为一名全栈工程师。 喜欢动手操作，有较强的自我学习能力。 在完成目标后会产生满足感。 希望通过不断学习来认识自己的渺小。 我不是最优秀的，但我是最用功的；我不是太显眼，但我很踏实。 兴趣爱好 喜欢并擅长游泳。 喜欢听音乐、唱歌。 “德玛西亚万岁”。 热爱卡牌策略类游戏（炉石传说，杀戮尖塔，月圆之夜）。 热爱“搞机”，经常浪迹各个“搞机”社区。"},{"title":"categories","date":"2018-09-10T10:11:08.000Z","updated":"2018-09-10T10:43:34.978Z","comments":false,"path":"categories/index.html","permalink":"http://www.guliansheng.club/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-09-10T10:13:08.000Z","updated":"2018-09-10T10:44:00.428Z","comments":false,"path":"tags/index.html","permalink":"http://www.guliansheng.club/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"前端技术分享","slug":"前端分享","date":"2019-11-11T08:08:55.310Z","updated":"2019-11-11T08:43:21.610Z","comments":true,"path":"2019/11/11/前端分享/","link":"","permalink":"http://www.guliansheng.club/2019/11/11/%E5%89%8D%E7%AB%AF%E5%88%86%E4%BA%AB/","excerpt":"本文主要分享一些前端开发中需要注意的点，其中包括浅（深）拷贝，原型链，vue开发中的注意点等。","text":"本文主要分享一些前端开发中需要注意的点，其中包括浅（深）拷贝，原型链，vue开发中的注意点等。 前端技术分享一、JavaScript1. 浅拷贝和深拷贝1234567891011121314151617181920212223242526272829303132333435363738394041// 数组浅拷贝var ary = [1,'a',true,null,undefined];var arySC = ary.slice();var aryCC = ary.concat();var aryFC = Array.from(ary);var aryMC = ary.map(function(item)&#123; return item;&#125;);// 对象浅拷贝var obj = &#123;a: 1,b: 2,&#125;;var objAC = Object.assign(&#123;&#125;, obj);// 通用浅拷贝var aryC = [...ary];var objC = &#123;...obj&#125;;// 通用深拷贝var jsonc = JSON.parse(JSON.stringify(ary/obj));// 无法实现对函数 、RegExp等特殊对象的克隆// 会抛弃对象的constructor,所有的构造函数会指向Object// 对象有循环引用,会报错// 函数实现深拷贝function deepClone(source) &#123; if (!source || typeof source !== \"object\") &#123; throw new Error(\"error arguments\"); &#125; var targetObj = source.constructor === Array ? [] : &#123;&#125;; for (var keys in source) &#123; if (source.hasOwnProperty(keys)) &#123; if (source[keys] &amp;&amp; typeof source[keys] === \"object\") &#123; targetObj[keys] = source[keys].constructor === Array ? [] : &#123;&#125;; targetObj[keys] = deepClone(source[keys]); &#125; else &#123; targetObj[keys] = source[keys]; &#125; &#125; &#125; return targetObj;&#125; 2. 原型链 3. Set和Map Set 12345678910111213141516171819// 数组去重var ary = [1,2,4,4,5,3,2];var newAry = [...new Set(ary)]// 并集，交集，差集var a = new Set([1, 2, 3]);var b = new Set([4, 3, 2]);// 并集var union = new Set([...a, ...b]);// Set &#123;1, 2, 3, 4&#125;// 交集var intersect = new Set([...a].filter(x =&gt; b.has(x)));// Set &#123;2, 3&#125;// 差集var difference = new Set([...a].filter(x =&gt; !b.has(x)));// Set &#123;1&#125; map 12345678910111213var map = new Map()map.set(true,null);for (let key of map.keys()) &#123; console.log(typeof(key)); // boolean&#125;var obj = &#123;&#125;obj.true = null;for (let key in obj) &#123; console.log(typeof(key)); // string&#125; WeakMap 1234567891011// 只接受对象作为键名（null除外），不接受其他类型的值作为键名// 没有遍历操作（即没有keys()、values()和entries()方法），也没有size属性// WeakMap只有四个方法可用：get()、set()、has()、delete()var weakMap = new WeakMap()var father = &#123;name: 'zhang', age: 58, sex: '男'&#125;var sons = [ &#123;name: 'zhangFirstSon', age: 32, sex: '男'&#125;, &#123;name: 'zhangSecondSon', age: 28, sex: '男'&#125; ]weakMap.set(father, sons);weakMap.get(father) 二、前端项目1. 立即执行watch（immediate）12345678watch: &#123; inpVal:&#123; handler()&#123; console.log('watch') &#125;, immediate: true &#125;&#125; 2. 组件通信（特殊） $attrs（2.4.0 新增） 1234567891011121314// 父组件&lt;son title=\"这是标题\" width=\"80\" height=\"80\"/&gt;// 子组件props: &#123; width: &#123; type: String, default: '' &#125;&#125;,mounted() &#123; console.log(this.$attrs) // &#123;title: \"这是标题\", height: \"80\"&#125;&#125; $listeners（2.4.0新增） 1234567// 父组件&lt;son @change=\"change\"/&gt;// 子组件mounted() &#123; console.log(this.$listeners) //即可拿到 change 事件&#125; $refs 123456// 父组件&lt;son ref=\"son\"/&gt;mounted()&#123; console.log(this.$refs.son) //即可拿到子组件的实例,就可以直接操作 data 和 methods&#125; 3. 路由相关 keep-alive 123456789101112131415161718192021222324 // include：需要缓存的路由，此处的a,b是路由中的name属性值&lt;keep-alive :include=\"['a', 'b']\"&gt; //或include=\"a,b\" :include=\"/a|b/\" &lt;router-view/&gt;&lt;/keep-alive&gt;// exclude：不需要缓存的路由&lt;keep-alive :exclude=\"['a', 'b']\"&gt; &lt;router-view/&gt;&lt;/keep-alive&gt;// 也可以使用v-if控制是否需要缓存&lt;keep-alive&gt; &lt;router-view v-if=\"flag\"&gt;&lt;/router-view&gt;&lt;/keep-alive&gt;&lt;router-view v-if=\"!flag\"&gt;&lt;/router-view&gt;// 使用keep-alive时出发的生命周期函数activated: function () &#123; console.log('页面第一次进入的时候，钩子触发的顺序是created-&gt;mounted-&gt;activated')&#125;,deactivated: function () &#123; console.log('页面退出的时候会触发deactivated，当再次前进或者后退的时候只触发activated')&#125;, router-view 的 key 12// vue会复用组件，如/page/1 =&gt; /page/2，类似这种的跳转组件不会执行created 和 mounted等钩子函数&lt;router-view :key=\"$route.fullpath\"&gt;&lt;/router-view&gt; 4. axios get传递数组问题 12345678// 请求拦截axios.interceptors.request.use(res =&gt; &#123; if(res.method === 'get') &#123; res.paramsSerializer = function (params) &#123; return qs.stringify(params, &#123;arrayFormat: 'repeat'&#125;) &#125; &#125;&#125; 三、浏览器及性能优化1. 防抖和节流1234567891011121314151617181920212223// 防抖const debounce = (fn, delay) =&gt; &#123; let timer = null; return (...args) =&gt; &#123; clearTimeout(timer); timer = setTimeout(() =&gt; &#123; fn.apply(this, args); &#125;, delay); &#125;;&#125;;// 节流const throttle = (fn, delay = 500) =&gt; &#123; let flag = true; return (...args) =&gt; &#123; if (!flag) return; flag = false; setTimeout(() =&gt; &#123; fn.apply(this, args); flag = true; &#125;, delay); &#125;;&#125;; 2. vue中的定时器及滚动监听程序化的事件侦听器 123456789101112131415161718192021mounted()&#123; function handleScroll() &#123; console.log('页面滚动'); &#125; window.addEventListener('scroll', handleScroll, false); console.log('mounted'); this.$once('hook:beforeDestroy', function () &#123; console.log('before'); window.removeEventListener('scroll', handleScroll, false); &#125;)&#125;methods:&#123; runTimer(type)&#123; const timer = window.setInterval(() =&gt; &#123; console.log('定时器开启中...') &#125;,1000) this.$once('hook:beforeDestroy', () =&gt; &#123; clearInterval(timer); &#125;) &#125;&#125; 3. 浏览器console.log()注意点1234567891011&lt;script&gt; var ary = [ '测试', &#123;name: 'wang', age: 26, job: [1, 2, 3]&#125;, &#123;name: 'li', age: 18, job: [4, 5, 6]&#125; ]; console.log(ary); ary[0] = 10; ary[1].age = 10; console.log(ary);&lt;/script&gt; 四、开源项目1. iviwe-admin2. vue-element-admin3. awesome4. awesome-vue","categories":[{"name":"前端技术分享","slug":"前端技术分享","permalink":"http://www.guliansheng.club/categories/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"}],"tags":[]},{"title":"bootstrap3快速调用10","slug":"bootstrap/bootstrap3快速调用10","date":"2019-06-08T09:13:37.113Z","updated":"2018-09-11T14:56:01.707Z","comments":true,"path":"2019/06/08/bootstrap/bootstrap3快速调用10/","link":"","permalink":"http://www.guliansheng.club/2019/06/08/bootstrap/bootstrap3%E5%BF%AB%E9%80%9F%E8%B0%83%E7%94%A810/","excerpt":"本篇章需要有一定的bootstrap基础，这里主要是将一些常用的功能集合起来，方便直接调用，并且相关代码已经经过处理可以直接使用，不需要额外调试，如发现问题可先查看是否为版本问题，如不是可在下方给我留言，我会及时作出回复（评论系统较慢，望谅解），文中有关的css，js文件的引用需要自行配置，如需要完整版可前往我的 github 仓库下载源码","text":"本篇章需要有一定的bootstrap基础，这里主要是将一些常用的功能集合起来，方便直接调用，并且相关代码已经经过处理可以直接使用，不需要额外调试，如发现问题可先查看是否为版本问题，如不是可在下方给我留言，我会及时作出回复（评论系统较慢，望谅解），文中有关的css，js文件的引用需要自行配置，如需要完整版可前往我的 github 仓库下载源码 源码1234567891011121314151617181920212223242526272829303132333435363738394041&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Document&lt;/title&gt; &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"./bs/css/bootstrap.css\"&gt; &lt;script type=\"text/javascript\" src='./bs/js/jquery.js'&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src='./bs/js/bootstrap.js'&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src='./bs/js/docs.js'&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=\"container\"&gt;&lt;h1&gt;工具提示&lt;small&gt;必须加入docs.js才能用&lt;/small&gt;&lt;/h1&gt;&lt;img src=\"holder.js/100%x300\" alt=\"\"&gt; &lt;!-- docs.js同样可以使用holder.js的效果 --&gt;&lt;div class=\"tooltip-demo\"&gt;&lt;!-- 必须放在这个div中才能使用工具提示 --&gt; &lt;button type=\"button\" class=\"btn btn-default\" data-toggle=\"tooltip\" data-placement=\"left\" title=\"Tooltip on left\"&gt;Tooltip on left&lt;/button&gt; &lt;button type=\"button\" class=\"btn btn-default\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"Tooltip on top\"&gt;Tooltip on top&lt;/button&gt; &lt;button type=\"button\" class=\"btn btn-default\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Tooltip on bottom\"&gt;Tooltip on bottom&lt;/button&gt; &lt;button type=\"button\" class=\"btn btn-default\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"\" data-original-title=\"Tooltip on right\" aria-describedby=\"tooltip274325\"&gt;Tooltip on right&lt;/button&gt; &lt;span data-toggle=\"tooltip\" data-placement=\"left\" title=\"弹出的内容放在title中\"&gt;应用在其他标签&lt;/span&gt;&lt;/div&gt;&lt;h1&gt;弹框&lt;/h1&gt;&lt;div class=\"popover-demo\"&gt;&lt;!-- 必须放在该div中,点击按钮可出现消失弹框 --&gt; &lt;button type=\"button\" class=\"btn btn-default\" data-toggle=\"popover\" data-placement=\"top\" data-content=\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\" title='顶部弹框'&gt; Popover on 顶部 &lt;/button&gt; &lt;button type=\"button\" class=\"btn btn-default\" data-toggle=\"popover\" data-placement=\"bottom\" data-content=\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\"&gt; Popover on 底部 &lt;/button&gt;&lt;/div&gt;&lt;h1&gt;可消失弹框&lt;/h1&gt;&lt;div class=\"bs-example-padded-bottom\"&gt;&lt;!-- 同样要放在这个div中 --&gt; &lt;a tabindex=\"0\" class=\"btn btn-lg btn-danger bs-docs-popover\" data-toggle=\"popover\" data-trigger=\"focus\" title=\"Dismissible popover\" data-content=\"And here's some amazing content. It's very engaging. Right?\" &gt;可消失的弹出框&lt;/a&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 演示地址","categories":[{"name":"bootstrap3快速调用","slug":"bootstrap3快速调用","permalink":"http://www.guliansheng.club/categories/bootstrap3%E5%BF%AB%E9%80%9F%E8%B0%83%E7%94%A8/"}],"tags":[{"name":"工具提示","slug":"工具提示","permalink":"http://www.guliansheng.club/tags/%E5%B7%A5%E5%85%B7%E6%8F%90%E7%A4%BA/"},{"name":"弹框","slug":"弹框","permalink":"http://www.guliansheng.club/tags/%E5%BC%B9%E6%A1%86/"}]},{"title":"事件绑定及双向数据绑定","slug":"Vue/事件绑定和数据双向绑定","date":"2019-02-26T10:11:57.000Z","updated":"2019-11-13T09:01:58.047Z","comments":true,"path":"2019/02/26/Vue/事件绑定和数据双向绑定/","link":"","permalink":"http://www.guliansheng.club/2019/02/26/Vue/%E4%BA%8B%E4%BB%B6%E7%BB%91%E5%AE%9A%E5%92%8C%E6%95%B0%E6%8D%AE%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A/","excerpt":"本文主要介绍vue中事件的绑定形式，及vue中的核心双向数据绑定。","text":"本文主要介绍vue中事件的绑定形式，及vue中的核心双向数据绑定。 事件绑定及双向数据绑定1. 事件绑定基础 事件函数不需要传参时,不要加(),因为vue中的函数中会自动传入event对象,如果加了()时,event会变成undefined;当需要传参时,event对象用参数$event来代替,再传入其他参数 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt; &lt;title&gt;&lt;/title&gt; &lt;style type=\"text/css\"&gt; .box2&#123; width:400px; height:400px; border:2px solid #ccc; margin:50px auto; text-align:center; padding:20px; &#125; &lt;/style&gt; &lt;script src=\"https://cdn.jsdelivr.net/npm/vue@2.5.16/dist/vue.js\"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=\"box\"&gt; &lt;button v-on:click='show(40)'&gt;点击翻转&lt;/button&gt; &lt;button v-on:dblclick='show(30)'&gt;点击翻转&lt;/button&gt; &lt;span &gt;&#123;&#123;message&#125;&#125;&#123;&#123;num&#125;&#125;&#123;&#123;event2()&#125;&#125;&lt;/span&gt; &lt;p @click='event'&gt;event不加括号&lt;/p&gt; &lt;p @click=\"event($event,1,'传参')\"&gt;event传参&lt;/p&gt; &lt;p @click='event2'&gt;event2不加括号&lt;/p&gt; &lt;p @click='event2()'&gt;event2加括号&lt;/p&gt; &lt;/div&gt; &lt;!-- v-on可以写成@ --&gt; &lt;div class=\"box2\" @mousemove='move(40)'&gt; &lt;p&gt;client:&#123;&#123;cx&#125;&#125;,&#123;&#123;cy&#125;&#125;&lt;/p&gt; &lt;p&gt;offset:&#123;&#123;ox&#125;&#125;,&#123;&#123;oy&#125;&#125;&lt;/p&gt; &lt;p&gt;screen:&#123;&#123;sx&#125;&#125;,&#123;&#123;sy&#125;&#125;&lt;/p&gt; &lt;p&gt;page:&#123;&#123;px&#125;&#125;,&#123;&#123;py&#125;&#125;&lt;/p&gt; &lt;p&gt;&lt;span @mousemove='stop' style='background: #f56778'&gt;stop&lt;/span&gt;&lt;/p&gt; &lt;/div&gt;&lt;/body&gt;&lt;script&gt; let vm=new Vue(&#123; el:'.box', data:&#123; message:'这是一个测试', num:40, &#125;, methods:&#123; //这里的方法不能用箭头函数 show(ev)&#123; //this指向vm根实例 this.num+=ev; this.message = this.message.split('').reverse().join(''); &#125;, event(event,a,b)&#123; console.log(event); console.log(a); console.log(b); &#125;, event2()&#123; //如果不需要传参时,内部event就是事件源,时间函数中不要加括号,否则event为undefined; console.log(event); &#125; &#125; &#125;) let vue2=new Vue(&#123; el:'.box2', data:&#123; cx:0, cy:0, ox:0, oy:0, sx:0, sy:0, px:0, py:0, &#125;, methods:&#123; move(num)&#123; ev=window.event || arguments.callee.caller.arguments[0]; this.cx=ev.clientX; this.cy=ev.clientY; this.ox=ev.offsetX; this.oy=ev.offsetY; this.sx=ev.screenX; this.sy=ev.screenY; this.px=ev.pageX; this.py=ev.pageY; console.log(num,ev.target); &#125;, stop(ev)&#123; //阻止冒泡事件 ev.stopPropagation(); // 阻止浏览器默认行为：e.preventDefault(); &#125; &#125; &#125;)&lt;/script&gt;&lt;/html&gt; 2. 双向数据绑定 仅限于HTML表单输入或选择元素元素，&lt;input&gt;、&lt;select&gt; 、&lt;textarea&gt; 修饰符： .lazy 取代 input 监听 change 事件 .number 输入字符串转为有效的数字 .trim 输入首尾空格过滤 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt; &lt;title&gt;&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"\"&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"app\"&gt; &lt;!-- vue会忽表单元素的value,checked,selected属性; --&gt; &lt;input type=\"text\" name=\"\" v-model.lazy='msg'&gt; &lt;input type=\"text\" name=\"\" v-model.number='num'&gt; &lt;input type=\"text\" name=\"\" v-model.number.trim='num'&gt; &lt;p v-html='msg'&gt;&lt;/p&gt; &lt;!-- v-once只绑定一次数据,不会受到后续的改变 --&gt; &lt;p v-once v-html='msg'&gt;&lt;/p&gt; &lt;p v-html='num'&gt;&lt;/p&gt; &lt;p&gt;只有一个复选框&lt;/p&gt; &lt;!-- 当复选框只有一个时,可以直接使用true和false来控制选中和未选中状态; --&gt; &lt;input type=\"checkbox\" name=\"\" v-model='checked' value=\"篮球\"&gt;篮球 &lt;p&gt;&#123;&#123;checked&#125;&#125;&lt;/p&gt; &lt;hr /&gt; &lt;p&gt;多个复选框&lt;/p&gt; &lt;!-- 当有多个复选框时,需要使用数组存放复选框的value值,用来控制相应的选中和非选中状态 --&gt; &lt;label&gt;&lt;input type=\"checkbox\" name=\"ch\" v-model='checked2' value=\"篮球\"&gt;篮球&lt;/label&gt; &lt;label&gt;&lt;input type=\"checkbox\" name=\"ch\" v-model='checked2' value=\"足球\"&gt;足球&lt;/label&gt; &lt;input type=\"checkbox\" name=\"ch\" id='ch' v-model='checked2' value=\"电影\"&gt;&lt;label for=\"ch\"&gt;电影&lt;/label&gt; &lt;input type=\"checkbox\" name=\"ch\" v-model='checked2' value=\"唱歌\"&gt;唱歌 &lt;!-- &lt;p&gt;&lt;input type=\"checkbox\" name=\"\" v-model='checked2' value=\"全选/全不选\"&gt;全选/全不选&lt;/p&gt; --&gt; &lt;p&gt;&#123;&#123;checked2&#125;&#125;&lt;/p&gt; &lt;p&gt;&lt;button @click.prevent='checkSubmit'&gt;提交&lt;/button&gt;&lt;/p&gt; &lt;hr /&gt; &lt;p&gt;单选框&lt;/p&gt; &lt;input type=\"radio\" v-model='radio' name=\"ra\" value=\"篮球\"&gt;篮球 &lt;input type=\"radio\" v-model='radio' name=\"ra\" value=\"足球\"&gt;足球 &lt;input type=\"radio\" v-model='radio' name=\"ra\" value=\"电影\"&gt;电影 &lt;input type=\"radio\" v-model='radio' name=\"ra\" value=\"唱歌\"&gt;唱歌 &lt;p&gt;&#123;&#123;radio&#125;&#125;&lt;/p&gt; &lt;hr /&gt; &lt;p&gt;正常绑定下拉框&lt;/p&gt; &lt;select name = \"\" v-model = 'select'&gt; &lt;!-- 这里需要有一个value为空的选项,否则页面无法获取第一项 --&gt; &lt;option value=\"\" disabled&gt;请选择&lt;/option&gt; &lt;option value=\"篮球\"&gt;篮球&lt;/option&gt; &lt;option value=\"足球\"&gt;足球&lt;/option&gt; &lt;option value=\"电影\"&gt;电影&lt;/option&gt; &lt;option value=\"唱歌\"&gt;唱歌&lt;/option&gt; &lt;/select&gt; &lt;p&gt;&#123;&#123;select&#125;&#125;&lt;/p&gt; &lt;hr /&gt; &lt;p&gt;循环option的下拉框&lt;/p&gt; &lt;select name=\"\" v-model='select2' multiple&gt; &lt;!-- 循环时,如果option有disabled属性才会循环,否则不会循环出来 --&gt; &lt;option v-for = '(option,index) in option' v-bind:value = 'option.value' v-bind:disabled = 'option.disabled' :key = 'index'&gt;&#123;&#123;option.text&#125;&#125;&lt;/option&gt; &lt;/select&gt; &lt;p&gt;&#123;&#123;select2&#125;&#125;&lt;/p&gt; &lt;hr /&gt; &lt;/div&gt;&lt;/body&gt;&lt;script src=\"https://cdn.jsdelivr.net/npm/vue@2.5.16/dist/vue.js\"&gt;&lt;/script&gt;&lt;script&gt; let vm = new Vue(&#123; el:'#app', data:&#123; num:47, msg:'这是双向绑定的数据', checked:true, //单个复选框 checked2:['足球'], //多个复选框 radio:'', //单选框 select:'', //单选选择框 select2:['篮球'], //多选选择框 option:[ &#123;text:'请选择',value:'请选择',disabled:'disabled'&#125;, &#123;text:'篮球',value:'篮球'&#125;, &#123;text:'足球',value:'足球'&#125;, &#123;text:'电影',value:'电影'&#125;, &#123;text:'唱歌',value:'唱歌'&#125;, ] &#125;, methods:&#123; //判断多个复选框的选项是否只有篮球和足球 checkSubmit()&#123; this.checked2.includes('篮球') &amp;&amp; this.checked2.includes('足球') &amp;&amp; this.checked2.length==2 ? alert('yes') : alert('no!'); &#125; &#125; &#125;)&lt;/script&gt;&lt;/html&gt;","categories":[{"name":"vue基础","slug":"vue基础","permalink":"http://www.guliansheng.club/categories/vue%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"vue事件绑定","slug":"vue事件绑定","permalink":"http://www.guliansheng.club/tags/vue%E4%BA%8B%E4%BB%B6%E7%BB%91%E5%AE%9A/"},{"name":"vue双向数据绑定","slug":"vue双向数据绑定","permalink":"http://www.guliansheng.club/tags/vue%E5%8F%8C%E5%90%91%E6%95%B0%E6%8D%AE%E7%BB%91%E5%AE%9A/"}]},{"title":"Vue初始化及基本指令","slug":"Vue/vue初始化及基本指令","date":"2019-02-23T06:29:34.000Z","updated":"2019-11-13T09:00:13.281Z","comments":true,"path":"2019/02/23/Vue/vue初始化及基本指令/","link":"","permalink":"http://www.guliansheng.club/2019/02/23/Vue/vue%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8F%8A%E5%9F%BA%E6%9C%AC%E6%8C%87%E4%BB%A4/","excerpt":"本文介绍的是vue的初始化操作及基本指令的使用。","text":"本文介绍的是vue的初始化操作及基本指令的使用。 数据1. vue初始化操作 初始化一个vue实例，el为获取的根节点元素，data必须放到el获取的元素中，data用于数据存储。 el的特性：取值为元素选择器el，只会在页面中选择第一个匹配上的元素 ，元素必须是非 HTML HEAD（包含head中的定义标签） BOODY 标签。 vm == viewModel ，vm 可以直接操作data中的数据。 123456789101112131415161718192021222324252627282930313233343536373839&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt; &lt;title&gt;&lt;/title&gt; &lt;script src=\"https://cdn.jsdelivr.net/npm/vue@2.5.16/dist/vue.js\"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"app\"&gt; &lt;h1&gt;姓名：&#123;&#123;name&#125;&#125; 年龄：&#123;&#123;age&#125;&#125; 爱好：&#123;&#123;hobby&#125;&#125; 动作：&#123;&#123;show()&#125;&#125;&lt;/h1&gt; &lt;h4&gt;&#123;&#123; news[0].title &#125;&#125;:&#123;&#123; news[0].text &#125;&#125;&lt;/h4&gt; &lt;h4&gt;&#123;&#123; news[1].title &#125;&#125;:&#123;&#123; news[1].text &#125;&#125;&lt;/h4&gt; &lt;/div&gt; &lt;div class=\"box2\"&gt; &#123;&#123;name&#125;&#125; &lt;/div&gt;&lt;/body&gt;&lt;script&gt; let vm = new Vue(&#123; el:\"#app\", data:&#123; name:'gu', age:40, hobby:'篮球', news:[ &#123;title:'baidu',text:'这是百度新闻'&#125;, &#123;title:'xinlang',text:'这是新浪新闻'&#125; ], // 这样做同样可以使用，但不是标准语法 show()&#123; name=this.name; return `my name is $&#123;name&#125;`; &#125;, &#125; &#125;); vm.age=59;//直接调用修改&lt;/script&gt;&lt;/html&gt; 2. 基本指令2.1 v-cloak 实现在vue功能构建完成前，隐藏浏览上vue语法表达式，该指令本身不具有特殊功能，需配合css样式实现效果。 2.2 v-text 更新元素的 textContent。如果要更新部分的 textContent ，需要使用 插值。 ２.3 v-html 更新元素的 innerHTML 。 2.4 v-bind 动态地绑定一个或多个特性，或一个组件 prop 到表达式。 123&lt;p v-bind[:参数][.修饰符]=\"值\"&gt;&lt;/p&gt;&lt;!-- 简写形式 --&gt;&lt;p :[参数][.修饰符]=\"值\"&gt;&lt;/p&gt; 2.5 v-pre 跳过这个元素和它的子元素的编译过程。可以用来显示原始 Mustache 标签。跳过大量没有指令的节点会加快编译。 2.6 v-once 对当前元素和内部元素vue功能执行一次，程序执行过程不在对该元素范围内的vue功能进行重新执行。 2.7 v-show 根据表达式的boolean结果，切换元素的 display CSS 属性，控制元素显示隐藏。 2.8 v-if ，v-else-if，v-else 根据表达式的boolean结果，执行元素的创建和删除操作。 2.9 v-for 基于数据多次渲染元素或模板块。 v-for中需要使用key值来区别循环出来的元素，防止元素复用。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt; &lt;title&gt;&lt;/title&gt; &lt;style type=\"text/css\"&gt; [v-cloak]&#123; display: none; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=\"box\"&gt; &lt;!-- v-bind:用于绑定标签身上的属性，使该属性应用vue的值； --&gt; &lt;a v-bind:href='website'&gt;百度&lt;/a&gt; &lt;!-- v-text和&#123;&#123;&#125;&#125;意义相同,但不会在页面渲染时出现&#123;&#123;&#125;&#125;闪出的问题 --&gt; &lt;p v-text='websiteTag'&gt;&lt;/p&gt; &lt;!-- v-html可以将vue值放到标签中，可以进行html代码的解析 --&gt; &lt;p v-html='websiteTag'&gt;&lt;/p&gt; &lt;!-- v-cloak防止渲染出现&#123;&#123;&#125;&#125;问题 --&gt; &lt;p v-cloak&gt;&#123;&#123;websiteTag&#125;&#125;&lt;/p&gt; &lt;!-- v-show显示元素 --&gt; &lt;p v-show='flagTrue'&gt;这是v-show指令&lt;/p&gt; &lt;!-- v-if不渲染元素 --&gt; &lt;p v-if='flagFalse'&gt;这是v-if指令&lt;/p&gt; &lt;p v-else&gt;这是v-else指令&lt;/p&gt; &lt;!-- v-once只在初始化时执行一次，通过vm.onceData赋值没有效果 --&gt; &lt;p v-once&gt;&#123;&#123;onceData&#125;&#125;&lt;/p&gt; &lt;!-- v-for循环数组 --&gt; &lt;p v-for=\"(val,index) in arr\"&gt;&#123;&#123;val&#125;&#125;&lt;/p&gt; &lt;/div&gt;&lt;/body&gt;&lt;script src=\"https://cdn.jsdelivr.net/npm/vue@2.5.16/dist/vue.js\"&gt;&lt;/script&gt;&lt;script&gt; let vm=new Vue(&#123; el:'.box', data:&#123; website:'http://www.baidu.com', websiteTag:'&lt;a href=\"http://www.baidu.com\"&gt;百度&lt;/a&gt;', flagTrue: true, flagFalse: false, onceData: '这是v-once指令渲染数据', arr: ['age', 'name', 'sex'] &#125; &#125;)&lt;/script&gt;&lt;/html&gt;","categories":[{"name":"vue基础","slug":"vue基础","permalink":"http://www.guliansheng.club/categories/vue%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"vue初始化","slug":"vue初始化","permalink":"http://www.guliansheng.club/tags/vue%E5%88%9D%E5%A7%8B%E5%8C%96/"},{"name":"vue基本指令","slug":"vue基本指令","permalink":"http://www.guliansheng.club/tags/vue%E5%9F%BA%E6%9C%AC%E6%8C%87%E4%BB%A4/"}]},{"title":"this关键字","slug":"面向对象/this关键字","date":"2018-09-19T07:51:56.000Z","updated":"2018-09-24T02:33:55.276Z","comments":true,"path":"2018/09/19/面向对象/this关键字/","link":"","permalink":"http://www.guliansheng.club/2018/09/19/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/this%E5%85%B3%E9%94%AE%E5%AD%97/","excerpt":"本章节主要介绍this在js中的几种情况下都是指向谁，并且如何修改this的指向","text":"本章节主要介绍this在js中的几种情况下都是指向谁，并且如何修改this的指向 this关键字this在js中的三种情况 自执行函数中的this，通常情况下指向Window 123~function fn()&#123; console.log(this); //=&gt; Window&#125;(); 在元素绑定事件方法中的this，通常情况下指向元素本身 123odiv.onclick = function ()&#123; console.log(this); &#125; 方法执行时看前面是否有点，有的话，this就是指向点前面的对象 123456function fn()&#123; console.log(this);&#125;var obj=&#123;name:'gu',fn:fn&#125;;obj.fn(); //=&gt; objfn(); //=&gt; Window 这些情况都是在非严格模式下，在严格模式下如果没有指定执行主体，this不再指向Window，而是undefined this指向总结 this要在执行的时候才能确定指向，定义时无法确认 this指向谁和函数在哪定义和执行没有关系 123456789101112131415161718192021222324252627282930&lt;body&gt; &lt;div class=\"div\"&gt;这是div1&lt;/div&gt; &lt;div class=\"div2\"&gt;这是div2&lt;/div&gt;&lt;/body&gt;&lt;script&gt;var innerHTML='window';//这里不能用let,因为let定义的全局变量不是window的身上的属性,这里的代码也不能放在window.onload中,这时定义的不是全局变量,而是window.onload中的局部变量;window.onload=function()&#123; odiv=document.querySelector('.div'); odiv2=document.querySelector('.div2'); function fun()&#123; console.log(this.innerHTML); &#125; let json=&#123; innerHTML:'json', fun:fun, &#125; //函数中的this指向执行这个事件或方法前面的对象,即 . 前面的主体 fun();//全局变量和全局方法是window身上的属性和方法,这里实际是window.fun() json.fun();//json是主体 odiv.onclick=fun();//这里直接执行了函数fun,而不是将这个方法交给点击事件来执行,所以这里执行的实际是window.fun(); odiv.onclick=fun;//odiv1是主体,执行点击事件; odiv2.onclick=json.fun;//odiv2是主体,json.fun只是方法的地址;&#125;&lt;/script&gt; call-apply-bindcall方法和apply方法相同点 都是由函数调用，并且传入的第一参数为对象，会将方法中的this的指向该对象 123456function fn()&#123; console.log(this)&#125;var json = &#123;&#125;fn.call(json)fn.apply(json) 执行过程相同：都是先改变this的指向，再将函数执行 不同点 传入的参数不同 1234567891011121314151617// call方法传参var json = &#123;name:'gu'&#125;function sum(num1,num2)&#123; console.log(num1+num2); console.log(this);&#125;sum.call(100,200);// NaN , this -&gt; Numbersum.call(json,100,200); // 300 , this -&gt; jsonsum.call(json); // NaN , this -&gt; jsonsum.call(); // NaN , this -&gt; window ; 在严格模式下:this -&gt; undefinedsum.call(null,100,200); // 300 , this -&gt; window ; 在严格模式下:this -&gt; nullsum.call(undefined); // NaN , this -&gt; window ; 在严格模式下:this -&gt; undefined// apply方法传参var arr = [34,56,22,23,45,22,23,76,54,34,23,34]console.log(Math.max.apply(null, arr)); // 76console.log(Math.min.apply(null, arr)); // 22 call的用法（apply相似不再详述） 求类数组平均值12345678910111213141516171819202122//借用数组的方法,只能是类数组可以这样借用 function avgFn()&#123; Array.prototype.sort.call(arguments,function(a,b)&#123;return a-b&#125;); [].splice.call(arguments,0,1); [].splice.call(arguments,this.length-1,1); console.log(arguments); console.log((eval([].join.call(arguments,'+'))/arguments.length).toFixed(1))//保留几位小数点,会四舍五入 &#125; //将类数组克隆到一个新数组中,再操作这个数组 function avgFn2()&#123; var newarg = Array.prototype.slice.call(arguments); newarg = [].slice.call(arguments);//和上面的意思相同; newarg.sort(function(a,b)&#123;return a-b&#125;); newarg.splice(0,1); newarg.splice(newarg.length-1,1); console.log(newarg); console.log(eval(newarg.join(\"+\"))/newarg.length); console.log(arguments); &#125; avgFn(45,3.4,3,23,5.6,46,32.2) avgFn2(45,3.4,3,23,5.6,46,32.2) bind方法 与call方法类似，传入的参数相同，但是在执行时，只会改变this的指向，并不会直接将函数执行 执行bind会有一个返回值,这个返回值就是把函数中的的this改变后的结果 12345678910var json1 = &#123;name:'gu'&#125;;var json2 = &#123;name:'lian'&#125;function sum(num1,num2)&#123; console.log(num1+num2); console.log(this.name);&#125;var bindsum1 = sum.bind(json,1,2);bindsum1(); // 3 , guvar bindsum2 = sum.bind(json2);bindsum2(1,2) // 3 , lian","categories":[{"name":"JavaScript面向对象","slug":"JavaScript面向对象","permalink":"http://www.guliansheng.club/categories/JavaScript%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"}],"tags":[{"name":"this","slug":"this","permalink":"http://www.guliansheng.club/tags/this/"},{"name":"call","slug":"call","permalink":"http://www.guliansheng.club/tags/call/"},{"name":"apply","slug":"apply","permalink":"http://www.guliansheng.club/tags/apply/"},{"name":"bind","slug":"bind","permalink":"http://www.guliansheng.club/tags/bind/"}]},{"title":"CSS常用知识点","slug":"CSS/css常用知识","date":"2018-09-14T11:28:52.000Z","updated":"2018-10-08T10:12:20.506Z","comments":true,"path":"2018/09/14/CSS/css常用知识/","link":"","permalink":"http://www.guliansheng.club/2018/09/14/CSS/css%E5%B8%B8%E7%94%A8%E7%9F%A5%E8%AF%86/","excerpt":"本文是CSS知识的基础应用篇。","text":"本文是CSS知识的基础应用篇。 1.flex 布局 display:flex; 在父元素设置，子元素受弹性盒影响，默认排成一行，如果超出一行，按比例压缩 flex:1; 子元素设置，设置子元素如何分配父元素的空间，flex:1, 子元素宽度占满整个父元素 align-items:center 定义子元素在父容器中的对齐方式，center 垂直居中 justify-content:center 设置子元素在父元素中居中，前提是子元素没有把父元素占满，让子元素水平居中。 2.css3 的新特性 transtion transition-property 规定设置过渡效果的 CSS 属性的名称。 transition-duration 规定完成过渡效果需要多少秒或毫秒。 transition-timing-function 规定速度效果的速度曲线。 transition-delay 定义过渡效果何时开始。 animation 属性可以像 Flash 制作动画一样，通过控制关键帧来控制动画的每一步，实现更为复杂的动画效果。 ainimation 实现动画效果主要由两部分组成： 通过类似 Flash 动画中的帧来声明一个动画； 在 animation 属性中调用关键帧声明的动画。 translate 3D 建模效果 3.img 中 alt 和 title 的区别 图片中的 alt 属性是在图片不能正常显示时出现的文本提示。 图片中的 title 属性是在鼠标在移动到元素上的文本提示。 4. 用纯 CSS 创建一个三角形1234567891011121314 &lt;style&gt; div &#123; width: 0; height: 0; border-top: 40px solid transparent; border-left: 40px solid transparent; border-right: 40px solid transparent; border-bottom: 40px solid #ff0000; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div&gt;&lt;/div&gt;&lt;/body&gt; 5. 如何理解 CSS 的盒子模型？ 标准盒子模型：宽度 = 内容的宽度（content）+ border + padding 低版本 IE 盒子模型：宽度 = 内容宽度（content+border+padding) 6. 如何让一个 div 水平居中 已知宽度，block 元素 ，添加添加 margin:0 auto 属性。 父级设置成 inline-block，其 margin: 0 auto 居中方式失效 已知宽度，绝对定位的居中 ，上下左右都为 0，margin: auto 7.如何让一个 div 水平垂直居中1234567891011121314151617181920212223div &#123;position: relative / fixed; /* 相对定位或绝对定位均可 */width:500px;height:300px;top: 50%;left: 50%;margin-top:-150px;margin-left:-250px; 外边距为自身宽高的一半 */background-color: pink; /* 方便看效果 */ &#125;.container &#123;display: flex;align-items: center; /* 垂直居中 */justify-content: center; /* 水平居中 */ &#125;.container div &#123;width: 100px; /* 可省 */height: 100px; /* 可省 */background-color: pink; /* 方便看效果 */&#125; 8.如何清除浮动？ clear 清除浮动（添加空 div 法）在浮动元素下方添加空 div, 并给该元素写 css 样式 {clear:both;height:0;overflow:hidden;} 给浮动元素父级设置高度 父级同时浮动（需要给父级同级元素添加浮动） 给父级添加 overflow:hidden 清除浮动方法 万能清除法 after 伪类 清浮动（现在主流方法，推荐使用） 1234567891011float_div:after&#123;content:&quot;.&quot;;clear:both;display:block;height:0;overflow:hidden;visibility:hidden;&#125;.float_div&#123;zoom:1&#125; 9.css3 实现三栏布局，左右固定，中间自适应 圣杯布局 / 双飞翼布局 123456789101112131415161718192021222324252627282930313233343536373839404142 &lt;style&gt; * &#123; margin: 0; padding: 0; &#125; .middle, .left, .right &#123; position: relative; float: left; min-height: 130px; &#125; .container &#123; padding: 0 220px 0 200px; overflow: hidden; &#125; .left &#123; margin-left: -100%; left: -200px; width: 200px; background: red; &#125; .right &#123; margin-left: -220px; right: -220px; width: 220px; background: green; &#125; .middle &#123; width: 100%; background: blue; word-break: break-all; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=&apos;container&apos;&gt; &lt;div class=&apos;middle&apos;&gt;&lt;/div&gt; &lt;div class=&apos;left&apos;&gt;&lt;/div&gt; &lt;div class=&apos;right&apos;&gt;&lt;/div&gt; &lt;/div&gt;&lt;/body&gt; 10.display:none 和 visibility: hidden 的区别 display:none 隐藏对应的元素，在文档布局中不再给它分配空间，它各边的元素会合拢，就当他从来不存在。 visibility:hidden 隐藏对应的元素，但是在文档布局中仍保留原来的空间。 11.CSS 中 link 和 @import 的区别是？ link 属于 HTML 标签，而 @import 是 CSS 提供的页面被加载的时，link 会同时被加载，而 @import 引用的 CSS 会等到页面被加载完再加载 import 只在 IE5 以上才能识别，而 link 是 HTML 标签，无兼容问题 link 方式的样式的权重 高于 @import 的权重. 12.position 的 absolute 与 fixed 共同点与不同点 共同点： 改变行内元素的呈现方式，display 被置为 block 让元素脱离普通流，不占据空间 默认会覆盖到非定位元素上 不同点： absolute 的” 根元素 “是可以设置的 fixed 的” 根元素 “固定为浏览器窗口。当你滚动网页，fixed 元素与浏览器窗口之间的距离是不变的。 13..transition 和 animation 的区别 Animation 和 transition 大部分属性是相同的，他们都是随时间改变元素的属性值，他们的主要区别是 transition 需要触发一个事件才能改变属性， 而 animation 不需要触发任何事件的情况下才会随时间改变属性值，并且 transition 为 2 帧，从 from …. to，而 animation 可以一帧一帧的。 transition 规定动画的名字 规定完成过渡效果需要多少秒或毫秒 规定速度效果 定义过渡效果何时开始 animation 指定要绑定到选择器的关键帧的名称 14.CSS 优先级123456789不同级别：总结排序：!important &gt; 行内样式&gt;ID选择器 &gt; 类选择器 &gt; 标签 &gt; 通配符 &gt; 继承 &gt; 浏览器默认属性 1.属性后面加!import 会覆盖页面内任何位置定义的元素样式 2.作为style属性写在元素内的样式 3.id选择器 4.类选择器 5.标签选择器 6.通配符选择器（*） 7.浏览器自定义或继承**同一级别：后写的会覆盖先写的** css 选择器的解析原则：选择器定位 DOM 元素是从右往左的方向，这样可以尽早的过滤掉一些不必要的样式规则和元素 15. 雪碧图：123 多个图片集成在一个图片中的图使用雪碧图可以减少网络请求的次数，加快允许的速度通过background-position，去定位图片在屏幕的哪个位置","categories":[{"name":"CSS","slug":"CSS","permalink":"http://www.guliansheng.club/categories/CSS/"}],"tags":[{"name":"CSS","slug":"CSS","permalink":"http://www.guliansheng.club/tags/CSS/"}]},{"title":"webpack","slug":"webpack/webpack","date":"2018-09-13T03:16:15.000Z","updated":"2018-09-13T07:56:54.657Z","comments":true,"path":"2018/09/13/webpack/webpack/","link":"","permalink":"http://www.guliansheng.club/2018/09/13/webpack/webpack/","excerpt":"本章主要介绍webpack的安装和相关配置","text":"本章主要介绍webpack的安装和相关配置 webpack简介webpack概念 本质上，webpack 是一个现代 JavaScript 应用程序的静态模块打包器(module bundler)。当 webpack 处理应用程序时，它会递归地构建一个依赖关系图(dependency graph)，其中包含应用程序需要的每个模块，然后将所有这些模块打包成一个或多个 bundle。 模块 在模块化编程中，开发者将程序分解成离散功能块(discrete chunks of functionality)，并称之为_模块_。 每个模块具有比完整程序更小的接触面，使得校验、调试、测试轻而易举。 精心编写的_模块_提供了可靠的抽象和封装界限，使得应用程序中每个模块都具有条理清楚的设计和明确的目的。 Node.js 从最一开始就支持模块化编程。然而，在 web，模块化的支持正缓慢到来。在 web 存在多种支持 JavaScript 模块化的工具，这些工具各有优势和限制。webpack 基于从这些系统获得的经验教训，并将_模块_的概念应用于项目中的任何文件。 webpack安装和打包全局安装1npm install webpack webpack-cli -g 局部安装12npm init -y //先初始化npm install webpack webpack-cli -S 打包js 默认entry(入口):src/index.js 默认output(出口):dist/main.js 在cmd中输入npx webpack,默认会将index.js打包到main.js中 npx webpack会执行bin中的webpack文件 如果使用npx webpack会将代码进行压缩打包,这是生产模式 在cmd输入npx webpack –mode development进行打包会以开发模式打包,不会压缩代码 打包的文件会放到dist文件夹中 打包之后的代码可以在浏览器中使用 配置文件配置项12345678910111213141516171819202122232425//基于node的语法,遵循commonjs规范let path = require('path');//专门处理路径用的node模块,以当前路径解析出一个相对路径module.exports = &#123; //entry有三种写法 entry:'./src/index.js', // 1.单个入口文件,单个出口文件,将index.js以及index.js中的引用打包到build.js中 entry:['./src/index.js','./src/page.js'], // 2.多个入口文件,单个出口文件,将index.js和page.js一起打包到build.js中 entry:&#123; index:'./src/index.js', page:'./src/page.js' &#125;//多个入口文件,多个出口文件,此时,output中要将filename改成'[name].[hash].js',并且要在html-webpack-plugin插件中配置多个html打包文件,做到多页面打包,每个页面引用不同的js文件 output:&#123; filename:'build.[hash:8].js',//设置hash值,清除缓存 path:path.resolve(\"./build\")//这个路径必须是绝对路径,打包到build文件夹下 &#125;,//出口 devServer:&#123;//开发服务器 contentBase:'./build', //本地服务地址 port:3000, //设置端口号 compress:true, //服务器压缩 open:true //启动后自动打开浏览器 &#125;, module:&#123;&#125;,//模块配置 plugin:[],//插件配置 mode:'development',//可以更改模式 resolve:&#123;&#125;,//配置解析&#125; 出入口配置 在根路径下创建webpack.config.js文件 在webpack.config.js中进行相关entry和output配置 loader webpack只支持js loader能让webpack对css,html,图片等进行打包 plugin 有效的打包或者压缩css,js,html,图片 快捷打包 在package.json中的scripts中设置”get”:”webpack –mode development” 在cmd中使用npm run get对代码进行打包 key的值可以随便取名,但运行时必须加run webpack-dev-server本地服务配置1npm install webpack-dev-server -S 在webpack.config.js中配置1234567devServer:&#123; contentBase:'./dist',//本地服务的路径 inline:true,//实时刷新 port:3000, //设置端口号,默认8080 compress:true, //服务器压缩 open:true //启动后自动打开浏览器&#125; 在package.json中的scripts中设置”dev”:”webpack-dev-server” 在cmd中使用npm run dev运行服务器 js中引用图片 可以直接使用线上图片的地址 将本地图片引入到js文件中1234import imgsrc from './top2.png'let img = new Image();img.src = imgsrc;document.body.appendChild(img); loader : 加载程序解析css1npm i style-loader css-loader -D css-loader将css解析成模块 style-loader将css解析的内容放到html中的style标签中 解析html中的图片1npm install html-withimg-loader -D 配置12345module:&#123; rules:[ &#123;test:/\\/.html$/,use:'html-withimg-loader'&#125; ]&#125; 解析css中的图片1npm install file-loader url-loader -D file-loader 将图片直接打包成图片格式的源文件 url-loader url-loader封装了file-loader , url-loader不依赖于file-loader 配置 123456789101112131415module: &#123; rules: [ &#123;test: /\\.css$/,use: ['style-loader', 'css-loader']&#125;, &#123;test:/\\.(jpg|png|jpeg|gif)$/,use: [ &#123;loader: 'url-loader', options: &#123; limit: '1024', //限制图片文件的大小,1024是1Kb name:'./img/[name].[ext]'//可以设置打包后的文件名和所在文件夹 &#125; &#125;, ] &#125;, &#123;test:/\\.(eot|svg|woff|woff2|wtf)$/,use:'url-loader'&#125;//字体图标格式 ]&#125; 文件大小小于limit参数，url-loader将会把文件转为DataURL，以base64编码方式打包到js文件中 文件大小大于limit参数，url-loader会调用file-loader进行处理，参数也会直接传给file-loader 解析预处理语言 解析less的loader1npm install less less-loader css-loader style-loader -D 配置12345678910111213141516const ExtractTextWebpackPlugin = require('extract-text-webpack-plugin');let lessExtract = new ExtractTextWebpackPlugin(&#123;filename:'./css/less.css'&#125;);module.exports = &#123; module: &#123; rules: [&#123; test: /\\.less$/, use: lessExtract.extract(&#123; use: [ &#123;loader: \"css-loader\"&#125;, &#123;loader: \"less-loader\"&#125; ] &#125;) &#125;] &#125;, plugins: [lessExtract]&#125;; 解析sass的loader1npm install sass sass-loader css-loader style-loader -D css样式自动添加前缀1npm i postcss-loader autoprefixer -D autoprefixer 是postcss-loader引用的规则 在根目录下创建postcss.config.js postcss.config.js中的配置12345module.exports = &#123; plugins:[ require('autoprefixer') ]&#125; 在webpack.config.js中配置1234567891011module:&#123; rules:[ &#123;test:/\\.css$/,use:cssExtract.extract(&#123; use:[//这种写法可以方便传入参数 &#123;loader:'css-loader'&#125;, &#123;loader:'postcss-loader'&#125; ] &#125;) &#125; ]&#125; 语法解析1npm i babel-loader babel-core babel-preset-env babel-preset-react -D babel-preset-env 让翻译拥有解析es2015+语法的功能 将es6语法转成es5语法 配置 第一种配置方案123456789101112module:&#123; &#123; test:/(\\.jsx|\\.js)$/, use:&#123; loader:'babel-loader', options:&#123; presets:['env','react'] &#125; &#125;, exclude:/node_modules/ //将node_modules文件中的文件排除 &#125;&#125; 第二种配置方案(推荐使用) 在根目录下创建 .babelrc文件（注意文件前面有一个 . ） 在.babelrc文件中配置123&#123; &quot;presets&quot;:[&apos;env&apos;,&apos;react&apos;]&#125; 将webpack.config.js中的options删除 这种方案适合大型项目开发 plugins : 插件打包html文件1npm install html-webpack-plugin -D 配置1234567891011121314151617181920212223242526272829303132const HtmlWebpackPlugin = require('html-webpack-plugin');module.exports = &#123; plugins:[ new HtmlWebpackPlugin(&#123; template:\"./src/index.html\", title:'zhufeng',//可使用的title属性,可以直接在html源文件中使用 filename:'index.html',//多页面打包后的html文件名 chunks:['index'],//多页面打包之后该页面的引入js文件名 minify:&#123; removeAttributeQuotes:true,//去除引号 removeComments:true,//去除注释 removeEmptyAttributes:true,//去除空属性 collapseWhitespace:true,//去除空格 hash:true //在html中的js文件名称后面加一串hash值,清除缓存 &#125; &#125;), //当需要配置多个文件出口时创建多个 new HtmlWebpackPlugin(&#123; template:\"./src/index.html\", title:'zhufeng',//可使用的title属性,可以直接在html源文件中使用 filename:'page.html', chunks:['page'] minify:&#123; removeAttributeQuotes:true,//去除引号 removeComments:true,//去除注释 removeEmptyAttributes:true,//去除空属性 collapseWhitespace:true,//去除空格 hash:true //在html中的js文件名称后面加一串hash值,清除缓存 &#125; &#125;) ]&#125;; 提取css文件1npm install extract-text-webpack-plugin@next -S 配置123456789101112131415161718192021222324const ExtractTextPlugin = require('extract-text-webpack-plugin');module.exports = &#123; plugins:[ new ExtractTextPlugin('./css/[name].css'), ], module:&#123; rules:[ &#123; test:/\\.css$/, use:ExtractTextPlugin.extract(&#123; fallback:\"style-loader\", use:[&#123; loader:'css-loader', options:&#123; minimize:true //css压缩 &#125; &#125;], publicPath:\"../\" &#125;) &#125;, ] &#125; &#125; 删除无用css代码(删除css中用不到的样式)1npm i purifycss-webpack purify-css glob -D 必须放到html-webpack-plugin插件后面使用12345678910let Purifycsswebpack = require('purifycss-webpack');let glob = require('glob');module.exports = &#123; plugins:[ new Purifycsswebpack(&#123; //没用的css会被删除掉; paths:glob.sync(path.resolve('src/*.html')) &#125;) ],&#125; 删除缓存文件1npm install clean-webpack-plugin -D 配置123456let CleanWebpackPlugin = require('clean-webpack-plugin');module.exports = &#123; plugins:[ new CleanWebpackPlugin(['./build'])//先将build文件夹删掉,再创建一个新的,清除缓存 ]&#125; 原样拷贝插件1npm install copy-webpack-plugin -D 配置123456789let CopyWebpackPlugin = require('copy-webpack-plugin'); plugins:[ new CopyWebpackPlugin([//是一个数组,可以拷贝多个文件夹下的文件 &#123; from:'src/doc',//需要拷贝的文件路径 to:'public'//拷贝后文件存放的路径,会在dist目录下的public文件夹中 &#125; ])]","categories":[{"name":"webpack","slug":"webpack","permalink":"http://www.guliansheng.club/categories/webpack/"}],"tags":[{"name":"webpack","slug":"webpack","permalink":"http://www.guliansheng.club/tags/webpack/"}]},{"title":"Git版本控制","slug":"Git/Git版本控制","date":"2018-09-13T02:30:33.000Z","updated":"2018-09-30T05:04:40.720Z","comments":true,"path":"2018/09/13/Git/Git版本控制/","link":"","permalink":"http://www.guliansheng.club/2018/09/13/Git/Git%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/","excerpt":"本章主要介绍Git的安装和基本使用，以及Git如何与github进行交互","text":"本章主要介绍Git的安装和基本使用，以及Git如何与github进行交互 Git简介Git和SVN的区别 svn是集中式的，需要有一台中央服务器 Git是分布式的 Git速度比svn快 svn中的每个文件夹都有一个文件 .svn文件，git有一个单独的文件 .git文件夹 Git安装 安装步骤： ![](http://www.guliansheng.club/img/blog/git/下载 1.png)![](http://www.guliansheng.club/img/blog/git/下载 2.png)![](http://www.guliansheng.club/img/blog/git/下载 3.png)![](http://www.guliansheng.club/img/blog/git/下载 4.png)![](http://www.guliansheng.club/img/blog/git/下载 5.png)![](http://www.guliansheng.club/img/blog/git/下载 6.png)![](http://www.guliansheng.club/img/blog/git/下载 7.png)![](http://www.guliansheng.club/img/blog/git/下载 8.png)![](http://www.guliansheng.club/img/blog/git/下载 9.png)![](http://www.guliansheng.club/img/blog/git/下载 10.png) 检测安装是否成功 ![](http://www.guliansheng.club/img/blog/git/下载 11.png) Git配置 配置个人的用户名称和电子邮件地址：12$ git config --global user.name &quot;runoob&quot;$ git config --global user.email test@runoob.com Git命令行操作基本命令 dir：查看当前目录详情 echo a &gt; a.txt：将a写入到a.txt中 ， 这种方法会将文件中的所有内容替换成a echo aa &gt;&gt; a.txt：将aa写到a.txt的末尾中 type a.txt：查看文件内容 git命令 git init：初始化文件夹 ， 将文件夹设置成git的工厂 git status / git status -s：查看当前文件状态 git add a.txt：将a.txt文件交给git管理 git add .：将目录中的所有文件讲给git管理 git commit -m “初始化版本”：提交文件 git checkout [文件名]：将修改的文件还原成最新版本中的状态， 如果文件已经提交到了暂存区就无法还原 git log：查看文件所有版本信息 git reflog：得到操作的版本id信息， 可以查看当前版本到其他版本需要回退多少步 git reset –hard [版本号的前几位]：将文件恢复到对应的版本 git log –pretty=oneline：在一行显示版本信息 git log –oneline：在一行显示信息， 比上面的还要简洁 git reset HEAD [文件名]：用HEAD(最新版本中的文件)替换该文件，这个文件可能已经提交到了暂存区，此时需要用该方法还原 git rm [文件名]：将文件删除 ， 同时将暂存区中的文件也删除 git rm –cached [文件名]：删除暂存区中的文件 git diff [文件名]：查看文件修改的差异 git diff [版本号] [文件名]：查看当前版本的文件和其他版本文件的差异 git状态 工作区：执行git init的文件夹 暂存区：修改的文件存放的地方 工厂：存储版本的地方 四种状态： untracked：未跟踪状态 unmodified：未修改 modified：修改 staged：阶段性 git 组件 blob组件：当执行git add . 时， git会在object文件夹中创建一个blob组件文件夹， 只是将文件内容存储起来， 和文件没有关系 git hash-object a.txt：查看blob组件的hash值 commit组件：每一次提交就会生成一个commit组件 git cat-file -p [commit组件的hash值]：可以查看相应的tree组件hash tree 组件：存储和文件相关的属性， 包括文件名， 修改时间等信息 git cat-file -p [tree组件的hash值]：查看文件相关信息 git分支 分支命令: git branch：查看git分支 git branch b1 [基于什么创建的分支(master)]: 创建分支b1 (在master上创建的分支) git checkout b1/master：切换到b1分支/主干 git checkout -b b1：创建分支b1，并且切换到b1分支 git merge master：将主干的内容合并到其他分支中 git merge b1：将b1分支合并到master主干 git branch -d b1：合并到主干之后要将分支删除 分支注意: 版本信息可能出现多个父级版本， 合并时会出现这种情况 多级分支: 在分支上再创建子分支， 要先将子分支合并到分支， 再将分支合并到主干 当主干和分支修改同一个文件时， 合并分支会出现冲突， 需要手动修改 git 常用 git update-ref refs/INIT 4fb0：给4fb0版本重命名为INIT，存放到refs文件夹中，之后可以直接使用git reset –hard INIT还原到该版本 git show-ref：查看引用名称 git update-ref -d refs/INIT：删除INIT引用名称 git tag beta0.0.1：给当前版本设置一个标签， 和引用名称效果相同， 可以直接使用这个名称切换版本 git tag -d beta0.0.1：删除版本标签 git rev-parse HEAD~n：查看最新版本的上n个版本绝对名称 git rev-parse HEAD^^：用^的数量来查看最新版本上几个版本绝对名称， 两个表示上一个版本 git远程工厂与远程工厂交互的几种情况 现有本地工厂， 之后提交给GitHub 本地工厂没有， 直接就在GitHub上创建， 之后克隆到本地 如果创建的仓库初始化了， 需要先将仓库的内容pull到本地， 在将本地内容进行提交 12345//git pull 拉取远程仓库内容， 并且合并分支git remote add origin https://github.com/guliansheng/git_test01git pull origin master --allow-unrelated-histories (windows中的写法)git pull origin master (linux中的写法)git push origin master (提交到GitHub) 1234567//git fetch 拉取远程仓库内容， 不合并分支git remote add origin https://github.com/guliansheng/git_test01git fetchgit branch -a (查看github分支)git merge --allow-unrelated-histories remotes/origin/master (windows中的写法， 合并分支)git merge remotes/origin/master (linux中的写法)git push origin master 如果创建的库没有进行初始化， 直接提交到GitHub 12git remote add origin https://github.com/guliansheng/git_test02git push origin master 本地没有， 直接在github上克隆一个仓库到本地 123456git clone https://github.com/guliansheng/empty_01cd empty_01echo empty &gt; empty.txtgit add .empty_01 &gt; git add .git push origin master","categories":[{"name":"Git版本控制","slug":"Git版本控制","permalink":"http://www.guliansheng.club/categories/Git%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"}],"tags":[{"name":"git","slug":"git","permalink":"http://www.guliansheng.club/tags/git/"}]},{"title":"bootstrap3快速调用11","slug":"bootstrap/bootstrap3快速调用11","date":"2018-09-11T15:00:44.000Z","updated":"2018-09-19T11:34:08.100Z","comments":true,"path":"2018/09/11/bootstrap/bootstrap3快速调用11/","link":"","permalink":"http://www.guliansheng.club/2018/09/11/bootstrap/bootstrap3%E5%BF%AB%E9%80%9F%E8%B0%83%E7%94%A811/","excerpt":"本篇章需要有一定的bootstrap基础，这里主要是将一些常用的功能集合起来，方便直接调用，并且相关代码已经经过处理可以直接使用，不需要额外调试，如发现问题可先查看是否为版本问题，如不是可在下方给我留言，我会及时作出回复（评论系统较慢，望谅解），文中有关的css，js文件的引用需要自行配置，如需要完整版可前往我的 github 仓库下载源码","text":"本篇章需要有一定的bootstrap基础，这里主要是将一些常用的功能集合起来，方便直接调用，并且相关代码已经经过处理可以直接使用，不需要额外调试，如发现问题可先查看是否为版本问题，如不是可在下方给我留言，我会及时作出回复（评论系统较慢，望谅解），文中有关的css，js文件的引用需要自行配置，如需要完整版可前往我的 github 仓库下载源码 源码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Document&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"./bs/css/bootstrap.css\"&gt; &lt;script src='./bs/js/jquery.js'&gt;&lt;/script&gt; &lt;script src='./bs/js/bootstrap.js'&gt;&lt;/script&gt; &lt;style type=\"text/css\"&gt; .MYcarousel&#123; width: 1000px; height: 400px; margin: 0 auto; &#125; .carousel-caption&#123; width: 1000px; height: 100px; background: #000; opacity: 0.7; position: absolute; left: 0!important; bottom: 50px!important; &#125; .carousel-caption h3&#123; margin: 0; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;h1 class=\"page-header\"&gt;幻灯片&lt;/h1&gt; &lt;div class=\"MYcarousel\"&gt; &lt;div id=\"mycarousel\" class=\"carousel slide\" data-ride=\"carousel\" &gt; &lt;!-- 幻灯片 --&gt; &lt;div class=\"carousel-inner\" role=\"listbox\"&gt; &lt;div class=\"item active\"&gt; &lt;img src=\"./image/1.jpg\" width='100%' alt=\"...\"&gt; &lt;div class=\"carousel-caption\"&gt; &lt;h3&gt;第一张&lt;/h3&gt; &lt;p&gt;幻灯片图片解释&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"item\"&gt; &lt;img src=\"./image/2.jpg\" width='100%' alt=\"...\"&gt; &lt;div class=\"carousel-caption\"&gt; &lt;h3&gt;第二张&lt;/h3&gt; &lt;p&gt;幻灯片图片解释&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"item\"&gt; &lt;img src=\"./image/3.jpg\" width='100%' alt=\"...\"&gt; &lt;div class=\"carousel-caption\"&gt; &lt;h3&gt;第三张&lt;/h3&gt; &lt;p&gt;幻灯片图片解释&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;!-- 指示灯 --&gt; &lt;ol class=\"carousel-indicators\"&gt; &lt;li data-target=\"#mycarousel\" data-slide-to=\"0\" class=\"active\"&gt;&lt;/li&gt; &lt;li data-target=\"#mycarousel\" data-slide-to=\"1\"&gt;&lt;/li&gt; &lt;li data-target=\"#mycarousel\" data-slide-to=\"2\"&gt;&lt;/li&gt; &lt;/ol&gt; &lt;!-- 左右控制 --&gt; &lt;a class=\"left carousel-control\" href=\"#mycarousel\" data-slide=\"prev\"&gt; &lt;span class=\"glyphicon glyphicon-chevron-left\"&gt;&lt;/span&gt;&lt;!-- 左图标 --&gt; &lt;span class=\"sr-only\"&gt;Previous&lt;/span&gt; &lt;/a&gt; &lt;a class=\"right carousel-control\" href=\"#mycarousel\" data-slide=\"next\"&gt; &lt;span class=\"glyphicon glyphicon-chevron-right\"&gt;&lt;/span&gt;&lt;!-- 右图标 --&gt; &lt;span class=\"sr-only\"&gt;Next&lt;/span&gt; &lt;/a&gt; &lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 演示地址","categories":[{"name":"bootstrap3快速调用","slug":"bootstrap3快速调用","permalink":"http://www.guliansheng.club/categories/bootstrap3%E5%BF%AB%E9%80%9F%E8%B0%83%E7%94%A8/"}],"tags":[{"name":"幻灯片","slug":"幻灯片","permalink":"http://www.guliansheng.club/tags/%E5%B9%BB%E7%81%AF%E7%89%87/"}]},{"title":"bootstrap3快速调用9","slug":"bootstrap/bootstrap3快速调用9","date":"2018-09-11T11:14:34.000Z","updated":"2018-09-24T02:27:25.617Z","comments":true,"path":"2018/09/11/bootstrap/bootstrap3快速调用9/","link":"","permalink":"http://www.guliansheng.club/2018/09/11/bootstrap/bootstrap3%E5%BF%AB%E9%80%9F%E8%B0%83%E7%94%A89/","excerpt":"本篇章需要有一定的bootstrap基础，这里主要是将一些常用的功能集合起来，方便直接调用，并且相关代码已经经过处理可以直接使用，不需要额外调试，如发现问题可先查看是否为版本问题，如不是可在下方给我留言，我会及时作出回复（评论系统较慢，望谅解），文中有关的css，js文件的引用需要自行配置，如需要完整版可前往我的 github 仓库下载源码","text":"本篇章需要有一定的bootstrap基础，这里主要是将一些常用的功能集合起来，方便直接调用，并且相关代码已经经过处理可以直接使用，不需要额外调试，如发现问题可先查看是否为版本问题，如不是可在下方给我留言，我会及时作出回复（评论系统较慢，望谅解），文中有关的css，js文件的引用需要自行配置，如需要完整版可前往我的 github 仓库下载源码 源码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Document&lt;/title&gt; &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"./bs/css/bootstrap.css\"&gt; &lt;script type=\"text/javascript\" src='./bs/js/jquery.js'&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src='./bs/js/bootstrap.js'&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=\"container\"&gt; &lt;h1&gt;模态框&lt;/h1&gt; &lt;hr&gt; &lt;!-- Button trigger modal --&gt; &lt;button type=\"button\" class=\"btn btn-primary btn-lg smodal\" data-target=\"#myModal\"&gt; Launch demo modal &lt;/button&gt; &lt;!-- Modal模态框内容 --&gt; &lt;div class=\"modal fade\" id=\"myModal\"&gt;&lt;!-- fade类是模态框淡入淡出动画类 --&gt; &lt;!-- 模态框的尺寸:在.modal-dialog后面添加modal-lg或者modal-sm分别表示大和小，不添加则是默认中等大小 --&gt; &lt;div class=\"modal-dialog modal-sm\"&gt; &lt;div class=\"modal-content\"&gt; &lt;div class=\"modal-header\"&gt;&lt;!-- 头部 --&gt; &lt;button type=\"button\" class=\"close hmodal\"&gt;&lt;span&gt;&amp;times;&lt;/span&gt;&lt;/button&gt;&lt;!-- 关闭符号 --&gt; &lt;h4 class=\"modal-title\" id=\"myModalLabel\"&gt;Modal title&lt;/h4&gt; &lt;/div&gt; &lt;div class=\"modal-body\"&gt;&lt;!-- 体部 --&gt; Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good !Linux is very good ! &lt;/div&gt; &lt;div class=\"modal-footer\"&gt;&lt;!-- 底部 --&gt; &lt;button type=\"button\" class=\"btn btn-default hmodal\"&gt;Close&lt;/button&gt;&lt;!-- 关闭按钮 --&gt; &lt;button type=\"button\" class=\"btn btn-primary savemodal\"&gt;Save changes&lt;/button&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;p&gt;&lt;/p&gt; &lt;!-- 标签页导航 --&gt; &lt;ul class=\"nav nav-tabs\"&gt; &lt;li class=\"active\"&gt;&lt;a href=\"#php\" data-toggle='tab'&gt;php&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#js\" data-toggle='tab'&gt;js&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#java\" data-toggle='tab'&gt;java&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=\"tab-content\"&gt; &lt;div id='php' class=\"tab-pane active fade in\"&gt;&lt;!-- fade in 淡入效果 --&gt; Raw denim you probably haven't heard of them jean shorts Austin. Nesciunt tofu stumptown aliqua, retro synth master cleanse. Mustache cliche tempor, williamsburg carles vegan helvetica. Reprehenderit butcher retro keffiyeh dreamcatcher synth. Cosby sweater eu banh mi, qui irure terry richardson ex squid. Aliquip placeat salvia cillum iphone. Seitan aliquip quis cardigan american apparel, butcher voluptate nisi qui. &lt;/div&gt; &lt;div id='js' class=\"tab-pane fade\"&gt; Food truck fixie locavore, accusamus mcsweeney's marfa nulla single-origin coffee squid. Exercitation +1 labore velit, blog sartorial PBR leggings next level wes anderson artisan four loko farm-to-table craft beer twee. Qui photo booth letterpress, commodo enim craft beer mlkshk aliquip jean shorts ullamco ad vinyl cillum PBR. Homo nostrud organic, assumenda labore aesthetic magna delectus mollit. Keytar helvetica VHS salvia yr, vero magna velit sapiente labore stumptown. Vegan fanny pack odio cillum wes anderson 8-bit, sustainable jean shorts beard ut DIY ethical culpa terry richardson biodiesel. Art party scenester stumptown, tumblr butcher vero sint qui sapiente accusamus tattooed echo park. &lt;/div&gt; &lt;div id='java' class=\"tab-pane fade\"&gt; Etsy mixtape wayfarers, ethical wes anderson tofu before they sold out mcsweeney's organic lomo retro fanny pack lo-fi farm-to-table readymade. Messenger bag gentrify pitchfork tattooed craft beer, iphone skateboard locavore carles etsy salvia banksy hoodie helvetica. DIY synth PBR banksy irony. Leggings gentrify squid 8-bit cred pitchfork. Williamsburg banh mi whatever gluten-free, carles pitchfork biodiesel fixie etsy retro mlkshk vice blog. Scenester cred you probably haven't heard of them, vinyl craft beer blog stumptown. Pitchfork sustainable tofu synth chambray yr. &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;script type=\"text/javascript\"&gt;//关闭和打开模态框方法：.modal('show')和modal('hide'),modal('toggle')打开或关闭;$('.smodal').click(function () &#123; $('#myModal').modal('show');&#125;)$('.hmodal').click(function()&#123; $('#myModal').modal('hide');&#125;)//事件：show.bs.modal:show方法调用之前;shown.bs.modal:模态框显示出来之后;hide.bs.modal:hide方法调用之前;hidden.bs.modal:模态框隐藏之后;$('#myModal').on('hidden.bs.modal', function () &#123; $('body').css(&#123;'background':'#ccc'&#125;);&#125;)&lt;/script&gt;&lt;/html&gt; 演示地址","categories":[{"name":"bootstrap3快速调用","slug":"bootstrap3快速调用","permalink":"http://www.guliansheng.club/categories/bootstrap3%E5%BF%AB%E9%80%9F%E8%B0%83%E7%94%A8/"}],"tags":[{"name":"模态框","slug":"模态框","permalink":"http://www.guliansheng.club/tags/%E6%A8%A1%E6%80%81%E6%A1%86/"},{"name":"弹出框","slug":"弹出框","permalink":"http://www.guliansheng.club/tags/%E5%BC%B9%E5%87%BA%E6%A1%86/"},{"name":"标签页导航","slug":"标签页导航","permalink":"http://www.guliansheng.club/tags/%E6%A0%87%E7%AD%BE%E9%A1%B5%E5%AF%BC%E8%88%AA/"}]},{"title":"bootstrap3快速调用8","slug":"bootstrap/bootstrap3快速调用8","date":"2018-09-11T11:09:24.000Z","updated":"2018-09-11T11:13:22.333Z","comments":true,"path":"2018/09/11/bootstrap/bootstrap3快速调用8/","link":"","permalink":"http://www.guliansheng.club/2018/09/11/bootstrap/bootstrap3%E5%BF%AB%E9%80%9F%E8%B0%83%E7%94%A88/","excerpt":"本篇章需要有一定的bootstrap基础，这里主要是将一些常用的功能集合起来，方便直接调用，并且相关代码已经经过处理可以直接使用，不需要额外调试，如发现问题可先查看是否为版本问题，如不是可在下方给我留言，我会及时作出回复（评论系统较慢，望谅解），文中有关的css，js文件的引用需要自行配置，如需要完整版可前往我的 github 仓库下载源码","text":"本篇章需要有一定的bootstrap基础，这里主要是将一些常用的功能集合起来，方便直接调用，并且相关代码已经经过处理可以直接使用，不需要额外调试，如发现问题可先查看是否为版本问题，如不是可在下方给我留言，我会及时作出回复（评论系统较慢，望谅解），文中有关的css，js文件的引用需要自行配置，如需要完整版可前往我的 github 仓库下载源码 源码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Document&lt;/title&gt; &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"./bs/css/bootstrap.css\"&gt; &lt;script type=\"text/javascript\" src='./bs/js/jquery.js'&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" src='./bs/js/bootstrap.js'&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=\"container\"&gt;&lt;h1&gt;列表组 &lt;small&gt;&lt;mark&gt;一般用于消息展示&lt;/mark&gt;&lt;/small&gt;&lt;/h1&gt;&lt;hr&gt;&lt;div class=\"row\"&gt;&lt;div class=\"col-md-6\"&gt;&lt;div class=\"list-group\"&gt; &lt;a href=\"#\" class=\"list-group-item active\"&gt; &lt;h4 class=\"list-group-item-heading\"&gt;List group item heading&lt;/h4&gt; &lt;p class=\"list-group-item-text\"&gt;List group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group&lt;/p&gt; &lt;/a&gt; &lt;a href=\"#\" class=\"list-group-item\"&gt; &lt;h4 class=\"list-group-item-heading\"&gt;List group item heading&lt;/h4&gt; &lt;p class=\"list-group-item-text\"&gt;List group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList&lt;/p&gt; &lt;/a&gt; &lt;a href=\"#\" class=\"list-group-item \"&gt; &lt;h4 class=\"list-group-item-heading\"&gt;List group item heading&lt;/h4&gt; &lt;p class=\"list-group-item-text\"&gt;List group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList&lt;/p&gt; &lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=\"col-md-6\"&gt; &lt;div class=\"list-group\"&gt; &lt;a href=\"#\" class=\"list-group-item active\"&gt; &lt;h4 class=\"list-group-item-heading\"&gt;List group item heading&lt;/h4&gt; &lt;p class=\"list-group-item-text\"&gt;List group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group&lt;/p&gt; &lt;/a&gt; &lt;a href=\"#\" class=\"list-group-item\"&gt; &lt;h4 class=\"list-group-item-heading\"&gt;List group item heading&lt;/h4&gt; &lt;p class=\"list-group-item-text\"&gt;List group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList&lt;/p&gt; &lt;/a&gt; &lt;a href=\"#\" class=\"list-group-item \"&gt; &lt;h4 class=\"list-group-item-heading\"&gt;List group item heading&lt;/h4&gt; &lt;p class=\"list-group-item-text\"&gt;List group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList&lt;/p&gt; &lt;/a&gt; &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;h1&gt;面板 &lt;small&gt;&lt;mark&gt;新闻展示，公告展示&lt;/mark&gt;&lt;/small&gt;&lt;/h1&gt;&lt;!-- 面板效果 --&gt;&lt;hr&gt;&lt;div class=\"panel panel-primary\"&gt; &lt;div class=\"panel-heading\"&gt; &lt;div class=\"panel-titel\"&gt; &lt;h2&gt;面板效果&lt;/h2&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"panel-body\"&gt; &lt;h4&gt;linux&lt;/h4&gt; &lt;/div&gt; &lt;div class=\"panel-footer\"&gt; &lt;p&gt;linux is very much!linux is very much!linux is very much!linux is very much!linux is very much!linux is very much!linux is very much!linux is very much!linux is very much!&lt;/p&gt; &lt;/div&gt;&lt;/div&gt;&lt;h1&gt;面板和列表组 &lt;small&gt;&lt;mark&gt;新闻展示，公告展示&lt;/mark&gt;&lt;/small&gt;&lt;/h1&gt;&lt;!-- 面板列表组效果：一般不用加body和footer直接加入列表组 --&gt;&lt;hr&gt;&lt;div class=\"row\"&gt; &lt;div class=\"col-md-6\"&gt; &lt;div class=\"panel panel-primary\"&gt; &lt;div class=\"panel-heading\"&gt; &lt;div class=\"panel-titel\"&gt; &lt;h2&gt;面板加列表组效果&lt;/h2&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"panel-body\"&gt; &lt;div class=\"list-group\"&gt; &lt;a href=\"#\" class=\"list-group-item \"&gt; &lt;h4 class=\"list-group-item-heading\"&gt;List group item heading&lt;/h4&gt; &lt;p class=\"list-group-item-text\"&gt;List group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group&lt;/p&gt; &lt;/a&gt; &lt;a href=\"#\" class=\"list-group-item\"&gt; &lt;h4 class=\"list-group-item-heading\"&gt;List group item heading&lt;/h4&gt; &lt;p class=\"list-group-item-text\"&gt;List group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList&lt;/p&gt; &lt;/a&gt; &lt;a href=\"#\" class=\"list-group-item \"&gt; &lt;h4 class=\"list-group-item-heading\"&gt;List group item heading&lt;/h4&gt; &lt;p class=\"list-group-item-text\"&gt;List group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList&lt;/p&gt; &lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;!-- &lt;div class=\"panel-footer\"&gt; &lt;p&gt;linux is very much!linux is very much!linux is very much!linux is very much!linux is very much!linux is very much!linux is very much!linux is very much!linux is very much!&lt;/p&gt; &lt;/div&gt; --&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"col-md-6\"&gt; &lt;div class=\"panel panel-info\"&gt; &lt;div class=\"panel-heading\"&gt; &lt;div class=\"panel-titel\"&gt; &lt;h2&gt;面板加列表组效果&lt;/h2&gt; &lt;/div&gt; &lt;/div&gt; &lt;!-- &lt;div class=\"panel-body\"&gt; --&gt; &lt;div class=\"list-group\"&gt; &lt;a href=\"#\" class=\"list-group-item \"&gt; &lt;h4 class=\"list-group-item-heading\"&gt;List group item heading&lt;/h4&gt; &lt;p class=\"list-group-item-text\"&gt;List group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group&lt;/p&gt; &lt;/a&gt; &lt;a href=\"#\" class=\"list-group-item\"&gt; &lt;h4 class=\"list-group-item-heading\"&gt;List group item heading&lt;/h4&gt; &lt;p class=\"list-group-item-text\"&gt;List group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList&lt;/p&gt; &lt;/a&gt; &lt;a href=\"#\" class=\"list-group-item \"&gt; &lt;h4 class=\"list-group-item-heading\"&gt;List group item heading&lt;/h4&gt; &lt;p class=\"list-group-item-text\"&gt;List group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList group item headingList&lt;/p&gt; &lt;/a&gt; &lt;/div&gt; &lt;!-- &lt;/div&gt; --&gt; &lt;div class=\"panel-footer\"&gt; &lt;p&gt;linux is very much!linux is very much!linux is very much!linux is very &lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;h1&gt;面板加入表格&lt;/h1&gt;&lt;!-- 面板中加入表格和加入列表相似 --&gt;&lt;hr&gt;&lt;div class=\"panel panel-primary\"&gt; &lt;div class=\"panel-heading\"&gt; &lt;div class=\"panel-titel\"&gt; &lt;h4&gt;面板表格效果&lt;/h4&gt; &lt;/div&gt; &lt;/div&gt; &lt;table class=\"table table-striped table-hover table-bordered\"&gt; &lt;tr&gt; &lt;th&gt;id&lt;/th&gt; &lt;th&gt;username&lt;/th&gt; &lt;th&gt;password&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;001&lt;/td&gt; &lt;td&gt;002&lt;/td&gt; &lt;td&gt;003&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;001&lt;/td&gt; &lt;td&gt;002&lt;/td&gt; &lt;td&gt;003&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;001&lt;/td&gt; &lt;td&gt;002&lt;/td&gt; &lt;td&gt;003&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;001&lt;/td&gt; &lt;td&gt;002&lt;/td&gt; &lt;td&gt;003&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;001&lt;/td&gt; &lt;td&gt;002&lt;/td&gt; &lt;td&gt;003&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;div class=\"panel-footer\"&gt; &lt;p&gt;&lt;mark&gt;下方可加入说明文字等&lt;/mark&gt;&lt;/p&gt; &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 演示地址","categories":[{"name":"bootstrap3快速调用","slug":"bootstrap3快速调用","permalink":"http://www.guliansheng.club/categories/bootstrap3%E5%BF%AB%E9%80%9F%E8%B0%83%E7%94%A8/"}],"tags":[{"name":"bootstrap","slug":"bootstrap","permalink":"http://www.guliansheng.club/tags/bootstrap/"},{"name":"列表组","slug":"列表组","permalink":"http://www.guliansheng.club/tags/%E5%88%97%E8%A1%A8%E7%BB%84/"},{"name":"面板","slug":"面板","permalink":"http://www.guliansheng.club/tags/%E9%9D%A2%E6%9D%BF/"},{"name":"列表组和面板","slug":"列表组和面板","permalink":"http://www.guliansheng.club/tags/%E5%88%97%E8%A1%A8%E7%BB%84%E5%92%8C%E9%9D%A2%E6%9D%BF/"},{"name":"表格和面板","slug":"表格和面板","permalink":"http://www.guliansheng.club/tags/%E8%A1%A8%E6%A0%BC%E5%92%8C%E9%9D%A2%E6%9D%BF/"}]},{"title":"bootstrap3快速调用7","slug":"bootstrap/bootstrap3快速调用7","date":"2018-09-11T11:00:12.000Z","updated":"2018-09-11T11:09:07.497Z","comments":true,"path":"2018/09/11/bootstrap/bootstrap3快速调用7/","link":"","permalink":"http://www.guliansheng.club/2018/09/11/bootstrap/bootstrap3%E5%BF%AB%E9%80%9F%E8%B0%83%E7%94%A87/","excerpt":"本篇章需要有一定的bootstrap基础，这里主要是将一些常用的功能集合起来，方便直接调用，并且相关代码已经经过处理可以直接使用，不需要额外调试，如发现问题可先查看是否为版本问题，如不是可在下方给我留言，我会及时作出回复（评论系统较慢，望谅解），文中有关的css，js文件的引用需要自行配置，如需要完整版可前往我的 github 仓库下载源码","text":"本篇章需要有一定的bootstrap基础，这里主要是将一些常用的功能集合起来，方便直接调用，并且相关代码已经经过处理可以直接使用，不需要额外调试，如发现问题可先查看是否为版本问题，如不是可在下方给我留言，我会及时作出回复（评论系统较慢，望谅解），文中有关的css，js文件的引用需要自行配置，如需要完整版可前往我的 github 仓库下载源码 源码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Document&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"./bs/css/bootstrap.css\"&gt; &lt;script src='./bs/js/docs.js'&gt;&lt;/script&gt; &lt;script src='./bs/js/jquery.js'&gt;&lt;/script&gt; &lt;script src='./bs/js/bootstrap.js'&gt;&lt;/script&gt; &lt;style type=\"text/css\"&gt; *&#123; font-family: 微软雅黑; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=\"container\"&gt; &lt;h1 class=\"page-header\"&gt;bootstrap&lt;/h1&gt; &lt;!-- 路径导航 --&gt; &lt;ol class=\"breadcrumb\"&gt; &lt;li&gt;&lt;a href=\"\"&gt;bootstrap&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;bootstrap&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;bootstrap&lt;/a&gt;&lt;/li&gt; &lt;li class=\"active\"&gt;bootstrap&lt;/li&gt; &lt;/ol&gt; &lt;!-- 分页 --&gt; &lt;ul class=\"pagination\"&gt; &lt;li class=\"disabled\"&gt;&lt;a href=\"\"&gt;&amp;laquo;&lt;/a&gt;&lt;/li&gt; &lt;li class=\"active\"&gt;&lt;a href=\"\"&gt;1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;2&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;3&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;4&lt;/a&gt;&lt;/li&gt; &lt;li class=\"pagination-lg\"&gt;&lt;a href=\"\"&gt;&amp;raquo;&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;!-- 上下页 --&gt; &lt;ul class=\"pager\"&gt; &lt;li class=\"previous disabled\"&gt;&lt;a href=\"\"&gt;&lt;span&gt;&amp;larr;&lt;/span&gt;上一页&lt;/a&gt;&lt;/li&gt; &lt;li class=\"next\"&gt;&lt;a href=\"\"&gt;下一页&lt;span&gt;&amp;rarr;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;!-- 标签 --&gt; &lt;span class=\"label label-primary\"&gt;primary&lt;/span&gt; &lt;span class=\"label label-info\"&gt;info &lt;/span&gt; &lt;!-- 徽章 --&gt; &lt;p&gt;&lt;/p&gt; &lt;a href=\"#\"&gt;Inbox &lt;span class=\"badge\"&gt;42&lt;/span&gt;&lt;/a&gt; &lt;button class=\"btn btn-primary\" type=\"button\"&gt; Messages &lt;span class=\"badge\"&gt;4&lt;/span&gt; &lt;/button&gt; &lt;p&gt;&lt;/p&gt; &lt;!-- 巨幕 --&gt; &lt;div class=\"jumbotron\"&gt; &lt;h1&gt;bootstrap&lt;/h1&gt; &lt;p&gt;bootstrap is vary goodbootstrap is vary goodbootstrap is vary goodbootstrap is vary goodbootstrap is vary goodbootstrap is vary goodbootstrap is vary goodbootstrap is vary goodbootstrap is vary goodbootstrap is vary goodbootstrap is vary good&lt;/p&gt; &lt;/div&gt; &lt;!-- 自定义内容 --&gt; &lt;div class=\"row\"&gt; &lt;div class=\"col-sm-3\"&gt; &lt;div class=\"thumbnail\"&gt; &lt;img src=\"holder.js/100%x180\"&gt; &lt;div class=\"caption\"&gt; &lt;h2&gt;Thumbnail label&lt;/h2&gt; &lt;p&gt;bootstrap is very goodbootstrap is very goodbootstrap is very goodbootstrap is very goodbootstrap is very good&lt;/p&gt; &lt;p&gt;&lt;a href=\"#\" class=\"btn btn-primary\" role=\"button\"&gt;Button&lt;/a&gt; &lt;a href=\"#\" class=\"btn btn-default\" role=\"button\"&gt;Button&lt;/a&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"col-sm-3\"&gt; &lt;div class=\"thumbnail\"&gt; &lt;img src=\"holder.js/100%x180\"&gt; &lt;div class=\"caption\"&gt; &lt;h2&gt;Thumbnail label&lt;/h2&gt; &lt;p&gt;bootstrap is very goodbootstrap is very goodbootstrap is very goodbootstrap is very goodbootstrap is very good&lt;/p&gt; &lt;p&gt;&lt;a href=\"#\" class=\"btn btn-primary\" role=\"button\"&gt;Button&lt;/a&gt; &lt;a href=\"#\" class=\"btn btn-default\" role=\"button\"&gt;Button&lt;/a&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"col-sm-3\"&gt; &lt;div class=\"thumbnail\"&gt; &lt;img src=\"holder.js/100%x180\"&gt; &lt;div class=\"caption\"&gt; &lt;h2&gt;Thumbnail label&lt;/h2&gt; &lt;p&gt;bootstrap is very goodbootstrap is very goodbootstrap is very goodbootstrap is very goodbootstrap is very good&lt;/p&gt; &lt;p&gt;&lt;a href=\"#\" class=\"btn btn-primary\" role=\"button\"&gt;Button&lt;/a&gt; &lt;a href=\"#\" class=\"btn btn-default\" role=\"button\"&gt;Button&lt;/a&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"col-sm-3\"&gt; &lt;div class=\"thumbnail\"&gt; &lt;img src=\"holder.js/100%x180\"&gt; &lt;div class=\"caption\"&gt; &lt;h2&gt;Thumbnail label&lt;/h2&gt; &lt;p&gt;bootstrap is very goodbootstrap is very goodbootstrap is very goodbootstrap is very goodbootstrap is very good&lt;/p&gt; &lt;p&gt;&lt;a href=\"#\" class=\"btn btn-primary\" role=\"button\"&gt;Button&lt;/a&gt; &lt;a href=\"#\" class=\"btn btn-default\" role=\"button\"&gt;Button&lt;/a&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;!-- 警告框 --&gt; &lt;div class=\"alert alert-success\"&gt; &lt;!-- 关闭按钮 --&gt; &lt;span class=\"close\" data-dismiss='alert'&gt;&amp;times;&lt;/span&gt; &lt;a href=\"#\" class=\"alert-link\"&gt;bootstrap&lt;/a&gt; bootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstrap&lt;/div&gt; &lt;div class=\"alert alert-info\"&gt; &lt;span class=\"close\" data-dismiss='alert'&gt;&amp;times;&lt;/span&gt; .bootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstra&lt;/div&gt; &lt;div class=\"alert alert-warning\"&gt; &lt;span class=\"close\" data-dismiss='alert'&gt;&amp;times;&lt;/span&gt; bootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstrap&lt;/div&gt; &lt;div class=\"alert alert-danger\"&gt; &lt;span class=\"close\" data-dismiss='alert'&gt;&amp;times;&lt;/span&gt; bootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstrapbootstrapb&lt;/div&gt; &lt;!-- 进度条 --&gt; &lt;div class=\"progress\"&gt; &lt;div class=\"progress-bar progress-start progress-bar-striped active\" style=\"width: 0%\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=\"progress\"&gt; &lt;div class=\"progress-bar ogress-bar-striped\" style=\"width: 90%\"&gt;90%&lt;/div&gt; &lt;/div&gt; &lt;div class=\"progress\"&gt; &lt;div class=\"progress-bar progress-bar-success progress-bar-striped \" style=\"width: 40%\"&gt;40%&lt;/div&gt; &lt;/div&gt; &lt;div class=\"progress\"&gt; &lt;div class=\"progress-bar progress-bar-info progress-bar-striped\" style=\"width: 20%\"&gt;20%&lt;/div&gt; &lt;/div&gt; &lt;div class=\"progress\"&gt; &lt;div class=\"progress-bar progress-bar-warning progress-bar-striped active\" style=\"width: 60%\"&gt;60%&lt;/div&gt; &lt;/div&gt; &lt;div class=\"progress\"&gt; &lt;div class=\"progress-bar progress-bar-danger progress-bar-striped active\" style=\"width: 80%\"&gt;80%&lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;script&gt; s=0;v=1; sobj=setInterval(function()&#123; s+=v; if(s&gt;=100)&#123; clearInterval(sobj); $('.progress-start').removeClass('active'); &#125; $('.progress-start').html(s+'%').css(&#123;'width':s+'%'&#125;); &#125;,100);&lt;/script&gt;&lt;/html&gt; 演示地址","categories":[{"name":"bootstrap3快速调用","slug":"bootstrap3快速调用","permalink":"http://www.guliansheng.club/categories/bootstrap3%E5%BF%AB%E9%80%9F%E8%B0%83%E7%94%A8/"}],"tags":[{"name":"bootstrap","slug":"bootstrap","permalink":"http://www.guliansheng.club/tags/bootstrap/"},{"name":"分页","slug":"分页","permalink":"http://www.guliansheng.club/tags/%E5%88%86%E9%A1%B5/"},{"name":"进度条","slug":"进度条","permalink":"http://www.guliansheng.club/tags/%E8%BF%9B%E5%BA%A6%E6%9D%A1/"},{"name":"自定义展示（常用）","slug":"自定义展示（常用）","permalink":"http://www.guliansheng.club/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%95%E7%A4%BA%EF%BC%88%E5%B8%B8%E7%94%A8%EF%BC%89/"},{"name":"关闭按钮","slug":"关闭按钮","permalink":"http://www.guliansheng.club/tags/%E5%85%B3%E9%97%AD%E6%8C%89%E9%92%AE/"}]},{"title":"bootstrap3快速调用6","slug":"bootstrap/bootstrap3快速调用6","date":"2018-09-11T09:57:41.000Z","updated":"2018-09-11T10:57:41.456Z","comments":true,"path":"2018/09/11/bootstrap/bootstrap3快速调用6/","link":"","permalink":"http://www.guliansheng.club/2018/09/11/bootstrap/bootstrap3%E5%BF%AB%E9%80%9F%E8%B0%83%E7%94%A86/","excerpt":"本篇章需要有一定的bootstrap基础，这里主要是将一些常用的功能集合起来，方便直接调用，并且相关代码已经经过处理可以直接使用，不需要额外调试，如发现问题可先查看是否为版本问题，如不是可在下方给我留言，我会及时作出回复（评论系统较慢，望谅解），文中有关的css，js文件的引用需要自行配置，如需要完整版可前往我的 github 仓库下载源码","text":"本篇章需要有一定的bootstrap基础，这里主要是将一些常用的功能集合起来，方便直接调用，并且相关代码已经经过处理可以直接使用，不需要额外调试，如发现问题可先查看是否为版本问题，如不是可在下方给我留言，我会及时作出回复（评论系统较慢，望谅解），文中有关的css，js文件的引用需要自行配置，如需要完整版可前往我的 github 仓库下载源码 源码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Document&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"./bs/css/bootstrap.css\"&gt; &lt;script src='./bs/js/jquery.js'&gt;&lt;/script&gt; &lt;script src='./bs/js/bootstrap.js'&gt;&lt;/script&gt; &lt;style type=\"text/css\"&gt; *&#123; font-family: 微软雅黑; &#125; body&#123; margin-top:30px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=\"container\"&gt; &lt;h1 class=\"page-header\"&gt;bootstrap&lt;/h1&gt; &lt;!-- 固定导航条在顶部navbar-fixed-top;导航条固定在底部navbar-fixed-bottom；导航条背景可自行设置，有两种通用类，navbar-default和navbar-inverse(反色) --&gt; &lt;nav class=\"navbar navbar-default navbar-fixed-top\" &gt; &lt;div class=\"container\"&gt; &lt;div class=\"navbar-header\"&gt; &lt;!-- 主题部分可以是文字也可以是logo --&gt; &lt;a href=\"\" class=\"navbar-brand\"&gt;&lt;img src=\"./image/logo.png\" height=\"130%\" alt=\"\"&gt;&lt;/a&gt; &lt;!-- 合并区展开按钮，用于小屏幕； --&gt; &lt;button class=\"navbar-toggle collapsed\" data-toggle='collapse' data-target='#mynavbar'&gt; &lt;span class=\"icon-bar\"&gt;&lt;/span&gt; &lt;span class=\"icon-bar\"&gt;&lt;/span&gt; &lt;span class=\"icon-bar\"&gt;&lt;/span&gt; &lt;/button&gt; &lt;/div&gt; &lt;!-- 合并区内容放在mynavbar中； --&gt; &lt;div id=\"mynavbar\" class=\"collapse navbar-collapse\"&gt; &lt;ul class=\"nav navbar-nav\"&gt; &lt;li&gt;&lt;a href=\"#\"&gt;起步&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;全局css样式&lt;/a&gt;&lt;/li&gt; &lt;!-- 插入按钮 --&gt; &lt;li&gt;&lt;button class=\"btn btn-default navbar-btn btn-sm\"&gt;查询&lt;/button&gt;&lt;/li&gt; &lt;!-- 插入表单 --&gt; &lt;form class=\"navbar-form navbar-left\"&gt; &lt;div class=\"form-group\"&gt; &lt;input type=\"text\" class=\"form-control input-sm\" placeholder=\"Search\"&gt; &lt;/div&gt; &lt;button type=\"submit\" class=\"btn btn-default btn-sm \"&gt;&lt;span class=\"glyphicon glyphicon-search\"&gt;&lt;/span&gt;&lt;/button&gt; &lt;/form&gt; &lt;!-- 添加文字和链接 --&gt; &lt;p class=\"navbar-text\"&gt;bootstrap &lt;a href=\"\" class=\"navbar-link\"&gt;链接&lt;/a&gt;&lt;/p&gt; &lt;/ul&gt; &lt;ul class=\"nav navbar-nav navbar-right\"&gt; &lt;!-- 添加下拉菜单 --&gt; &lt;li class=\"dropdown\"&gt; &lt;a href=\"\" class=\"dropdown-toggle\" data-toggle='dropdown'&gt;&lt;span&gt;bootstrap中文网&lt;/span&gt; &lt;span class=\"caret\"&gt;&lt;/span&gt;&lt;/a&gt; &lt;ul class=\"dropdown-menu\"&gt; &lt;li class=\".dropdown-header\"&gt;&lt;a href=\"\"&gt;bootstrap&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;bootstrap&lt;/a&gt;&lt;/li&gt; &lt;li class=\"divider\"&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;bootstrap&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;bootstrap&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/nav&gt; &lt;!-- 路径导航 --&gt; &lt;ol class=\"breadcrumb\"&gt; &lt;li&gt;&lt;a href=\"\"&gt;bootstrap&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;bootstrap&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;bootstrap&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;bootstrap&lt;/a&gt;&lt;/li&gt; &lt;li class=\"active\"&gt;bootstrap&lt;/li&gt; &lt;/ol&gt; &lt;h3&gt;0001&lt;/h3&gt; &lt;h3&gt;0002&lt;/h3&gt; &lt;h3&gt;0003&lt;/h3&gt; &lt;h3&gt;0004&lt;/h3&gt; &lt;h3&gt;0005&lt;/h3&gt; &lt;h3&gt;0006&lt;/h3&gt; &lt;h3&gt;0007&lt;/h3&gt; &lt;h3&gt;0008&lt;/h3&gt; &lt;h3&gt;0009&lt;/h3&gt; &lt;h3&gt;0010&lt;/h3&gt; &lt;h3&gt;0011&lt;/h3&gt; &lt;h3&gt;0012&lt;/h3&gt; &lt;h3&gt;0013&lt;/h3&gt; &lt;h3&gt;0014&lt;/h3&gt; &lt;h3&gt;0015&lt;/h3&gt; &lt;h3&gt;0016&lt;/h3&gt; &lt;h3&gt;0017&lt;/h3&gt; &lt;h3&gt;0018&lt;/h3&gt; &lt;h3&gt;0019&lt;/h3&gt; &lt;h3&gt;0020&lt;/h3&gt; &lt;h3&gt;0021&lt;/h3&gt; &lt;h3&gt;0022&lt;/h3&gt; &lt;h3&gt;0023&lt;/h3&gt; &lt;h3&gt;0024&lt;/h3&gt; &lt;/div&gt;&lt;/body&gt;&lt;script&gt;$('.navbar-nav li').mouseenter(function()&#123; $(this).addClass('active'); $('.navbar-nav li').not($(this)).removeClass('active');&#125;)&lt;/script&gt;&lt;/html&gt; 演示地址","categories":[{"name":"bootstrap3快速调用","slug":"bootstrap3快速调用","permalink":"http://www.guliansheng.club/categories/bootstrap3%E5%BF%AB%E9%80%9F%E8%B0%83%E7%94%A8/"}],"tags":[{"name":"bootstrap","slug":"bootstrap","permalink":"http://www.guliansheng.club/tags/bootstrap/"},{"name":"导航条","slug":"导航条","permalink":"http://www.guliansheng.club/tags/%E5%AF%BC%E8%88%AA%E6%9D%A1/"}]},{"title":"bootstrap3快速调用5","slug":"bootstrap/bootstrap3快速调用5","date":"2018-09-11T09:51:25.000Z","updated":"2018-09-11T09:56:28.997Z","comments":true,"path":"2018/09/11/bootstrap/bootstrap3快速调用5/","link":"","permalink":"http://www.guliansheng.club/2018/09/11/bootstrap/bootstrap3%E5%BF%AB%E9%80%9F%E8%B0%83%E7%94%A85/","excerpt":"本篇章需要有一定的bootstrap基础，这里主要是将一些常用的功能集合起来，方便直接调用，并且相关代码已经经过处理可以直接使用，不需要额外调试，如发现问题可先查看是否为版本问题，如不是可在下方给我留言，我会及时作出回复（评论系统较慢，望谅解），文中有关的css，js文件的引用需要自行配置，如需要完整版可前往我的 github 仓库下载源码","text":"本篇章需要有一定的bootstrap基础，这里主要是将一些常用的功能集合起来，方便直接调用，并且相关代码已经经过处理可以直接使用，不需要额外调试，如发现问题可先查看是否为版本问题，如不是可在下方给我留言，我会及时作出回复（评论系统较慢，望谅解），文中有关的css，js文件的引用需要自行配置，如需要完整版可前往我的 github 仓库下载源码 源码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Document&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"./bs/css/bootstrap.css\"&gt; &lt;script src='./bs/js/jquery.js'&gt;&lt;/script&gt; &lt;script src='./bs/js/bootstrap.js'&gt;&lt;/script&gt; &lt;style type=\"text/css\"&gt; .daohang1&#123; margin: 15px 15px; &#125; a&#123; cursor: pointer; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=\"container\"&gt; &lt;h1 class=\"page-header\"&gt;bootstrap&lt;/h1&gt; &lt;ul class=\"nav nav-tabs\"&gt; &lt;li class=\"active\"&gt;&lt;a&gt;menu1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a&gt;menu2&lt;/a&gt;&lt;/li&gt; &lt;li class=\"dropdown\"&gt;&lt;a class=\"dropdown-toggle\" data-toggle='dropdown'&gt;menu3 &lt;span class=\"caret\"&gt;&lt;/span&gt;&lt;/a&gt; &lt;ul class=\"dropdown-menu\"&gt; &lt;li&gt;&lt;a href=\"\"&gt;1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;1&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;div class=\"daohang1\"&gt; &lt;p class=\"lead\"&gt;i like bootstrapi like bootstrapi like bootstrapi like bootstrapi like bootstrapi like bootstrapi like bootstrapi like bootstrapi like bootstrapi like bootstrap i like bootstrapi like bootstrapi like bootstrapi like bootstrapi like bootstrapi like bootstrapi like bootstrapi like bootstrapi like bootstrapi like bootstrap&lt;/p&gt; &lt;p class=\"lead\"&gt;i like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like js&lt;/p&gt; &lt;p class=\"lead\"&gt;i like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bs&lt;/p&gt; &lt;/div&gt; &lt;ul class=\"nav nav-pills\"&gt; &lt;li class=\"active\"&gt;&lt;a href=\"\"&gt;menu1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;menu2&lt;/a&gt;&lt;/li&gt; &lt;li class=\"dropdown\"&gt;&lt;a href=\"\" class=\"dropdown-toggle\" data-toggle='dropdown'&gt;menu3 &lt;span class=\"caret\"&gt;&lt;/span&gt;&lt;/a&gt; &lt;ul class=\"dropdown-menu\"&gt; &lt;li&gt;&lt;a href=\"\"&gt;1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;1&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;ul class=\"nav nav-pills nav-stacked col-md-3\"&gt; &lt;li class=\"active\"&gt;&lt;a href=\"\"&gt;menu1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;menu2&lt;/a&gt;&lt;/li&gt; &lt;li class=\"dropdown\"&gt;&lt;a href=\"\" class=\"dropdown-toggle\" data-toggle='dropdown'&gt;menu3 &lt;span class=\"caret\"&gt;&lt;/span&gt;&lt;/a&gt; &lt;ul class=\"dropdown-menu\"&gt; &lt;li&gt;&lt;a href=\"\"&gt;1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;1&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;div class=\"daohang2 col-md-9\"&gt; &lt;p class=\"lead\"&gt;i like bootstrapi like bootstrapi like bootstrapi like bootstrapi like bootstrapi like bootstrapi like bootstrapi like bootstrapi like bootstrapi like bootstrap i like bootstrapi like bootstrapi like bootstrapi like bootstrapi like bootstrapi like bootstrapi like bootstrapi like bootstrapi like bootstrapi like bootstrap&lt;/p&gt; &lt;p class=\"lead\"&gt;i like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like jsi like js&lt;/p&gt; &lt;p class=\"lead\"&gt;i like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bsi like bs&lt;/p&gt; &lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;script&gt; $('.daohang1 p').not($('.daohang1 p').eq(0)).stop().hide(100); $('.nav-tabs li').click(function()&#123; $(this).addClass('active'); $('.nav-tabs li').not($(this)).removeClass('active'); ind=$(this).index('.nav-tabs li'); $('.daohang1 p').eq(ind).stop().show(100); $('.daohang1 p').not($('.daohang1 p').eq(ind)).stop().hide(100); &#125;); $('.daohang2 p').not($('.daohang2 p').eq(0)).stop().hide(100); $('.nav-pills li').mouseenter(function()&#123; $(this).addClass('active'); $('.nav-pills li').not($(this)).removeClass('active'); ind=$(this).index('.nav-pills li'); $('.daohang2 p').eq(ind).stop().show(100); $('.daohang2 p').not($('.daohang2 p').eq(ind)).stop().hide(100); &#125;);&lt;/script&gt;&lt;/html&gt; 演示地址","categories":[{"name":"bootstrap3快速调用","slug":"bootstrap3快速调用","permalink":"http://www.guliansheng.club/categories/bootstrap3%E5%BF%AB%E9%80%9F%E8%B0%83%E7%94%A8/"}],"tags":[{"name":"bootstrap","slug":"bootstrap","permalink":"http://www.guliansheng.club/tags/bootstrap/"},{"name":"菜单栏","slug":"菜单栏","permalink":"http://www.guliansheng.club/tags/%E8%8F%9C%E5%8D%95%E6%A0%8F/"}]},{"title":"bootstrap3快速调用4","slug":"bootstrap/bootstrap3快速调用4","date":"2018-09-11T09:47:10.000Z","updated":"2018-09-11T09:51:00.320Z","comments":true,"path":"2018/09/11/bootstrap/bootstrap3快速调用4/","link":"","permalink":"http://www.guliansheng.club/2018/09/11/bootstrap/bootstrap3%E5%BF%AB%E9%80%9F%E8%B0%83%E7%94%A84/","excerpt":"本篇章需要有一定的bootstrap基础，这里主要是将一些常用的功能集合起来，方便直接调用，并且相关代码已经经过处理可以直接使用，不需要额外调试，如发现问题可先查看是否为版本问题，如不是可在下方给我留言，我会及时作出回复（评论系统较慢，望谅解），文中有关的css，js文件的引用需要自行配置，如需要完整版可前往我的 github 仓库下载源码","text":"本篇章需要有一定的bootstrap基础，这里主要是将一些常用的功能集合起来，方便直接调用，并且相关代码已经经过处理可以直接使用，不需要额外调试，如发现问题可先查看是否为版本问题，如不是可在下方给我留言，我会及时作出回复（评论系统较慢，望谅解），文中有关的css，js文件的引用需要自行配置，如需要完整版可前往我的 github 仓库下载源码 源码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\"&gt; &lt;title&gt;Document&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"./bs/css/bootstrap.css\"&gt; &lt;script src='./bs/js/jquery.js'&gt;&lt;/script&gt; &lt;script src='./bs/js/bootstrap.js'&gt;&lt;/script&gt; &lt;style type=\"text/css\"&gt; *&#123; font-family: 微软雅黑; &#125; .input-group&#123; margin-top:15px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=\"container\"&gt;&lt;h1 class=\"page-header\"&gt;bootstrap&lt;/h1&gt;&lt;form action=\"\"&gt; &lt;div class=\"input-group\"&gt; &lt;span class=\"input-group-addon\"&gt; &lt;input type='checkbox'&gt; &lt;/span&gt; &lt;input type=\"text\" class=\"form-control\"&gt; &lt;/div&gt; &lt;div class=\"input-group\"&gt; &lt;span class=\"input-group-addon\"&gt;$&lt;/span&gt; &lt;input type=\"text\" class=\"form-control\"&gt; &lt;span class=\"input-group-addon\"&gt;.00&lt;/span&gt; &lt;/div&gt; &lt;div class=\"input-group\"&gt; &lt;span class=\"input-group-btn\"&gt; &lt;button class=\"btn btn-default\"&gt;输入框组按钮&lt;/button&gt; &lt;/span&gt; &lt;input type=\"text\" class=\"form-control\"&gt; &lt;/div&gt; &lt;div class=\"input-group\"&gt; &lt;div class=\"input-group-btn\"&gt; &lt;button class=\"btn btn-default\" data-toggle='dropdown'&gt;下拉菜单 &lt;span class=\"caret\"&gt;&lt;/span&gt;&lt;/button&gt; &lt;ul class=\"dropdown-menu\"&gt; &lt;li&gt;1111111&lt;/li&gt; &lt;li&gt;1111111&lt;/li&gt; &lt;li&gt;1111111&lt;/li&gt; &lt;li&gt;1111111&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;input type=\"text\" class=\"form-control\"&gt; &lt;/div&gt; &lt;div class=\"input-group\"&gt; &lt;span class=\"input-group-btn\"&gt; &lt;button class=\"btn btn-default\"&gt;分列式下拉菜单&lt;/button&gt; &lt;button class=\"btn btn-default dropdown-toggle\" data-toggle='dropdown'&gt;&lt;span class=\"caret\"&gt;&lt;/span&gt;&lt;/button&gt; &lt;ul class=\"dropdown-menu\"&gt; &lt;li&gt;1111111&lt;/li&gt; &lt;li&gt;1111111&lt;/li&gt; &lt;li&gt;1111111&lt;/li&gt; &lt;li&gt;1111111&lt;/li&gt; &lt;/ul&gt; &lt;/span&gt; &lt;input type=\"text\" class='form-control'&gt; &lt;/div&gt; &lt;div class=\"input-group\"&gt; &lt;span class=\"input-group-addon\"&gt;&lt;input type=\"checkbox\" &gt;&lt;/span&gt; &lt;input type=\"text\" class=\"form-control\"&gt; &lt;span class=\"input-group-btn\"&gt; &lt;button class=\"btn btn-default\"&gt;anniu&lt;/button&gt; &lt;button class=\"btn btn-default\"&gt;anniu&lt;/button&gt; &lt;/span&gt; &lt;/div&gt;&lt;/form&gt;&lt;/div&gt;&lt;/body&gt; 演示地址","categories":[{"name":"bootstrap3快速调用","slug":"bootstrap3快速调用","permalink":"http://www.guliansheng.club/categories/bootstrap3%E5%BF%AB%E9%80%9F%E8%B0%83%E7%94%A8/"}],"tags":[{"name":"bootstrap","slug":"bootstrap","permalink":"http://www.guliansheng.club/tags/bootstrap/"},{"name":"输入框组","slug":"输入框组","permalink":"http://www.guliansheng.club/tags/%E8%BE%93%E5%85%A5%E6%A1%86%E7%BB%84/"}]},{"title":"bootstrap3快速调用3","slug":"bootstrap/bootstrap3快速调用3","date":"2018-09-11T09:22:28.000Z","updated":"2018-09-11T09:46:17.180Z","comments":true,"path":"2018/09/11/bootstrap/bootstrap3快速调用3/","link":"","permalink":"http://www.guliansheng.club/2018/09/11/bootstrap/bootstrap3%E5%BF%AB%E9%80%9F%E8%B0%83%E7%94%A83/","excerpt":"本篇章需要有一定的bootstrap基础，这里主要是将一些常用的功能集合起来，方便直接调用，并且相关代码已经经过处理可以直接使用，不需要额外调试，如发现问题可先查看是否为版本问题，如不是可在下方给我留言，我会及时作出回复（评论系统较慢，望谅解），文中有关的css，js文件的引用需要自行配置，如需要完整版可前往我的 github 仓库下载源码","text":"本篇章需要有一定的bootstrap基础，这里主要是将一些常用的功能集合起来，方便直接调用，并且相关代码已经经过处理可以直接使用，不需要额外调试，如发现问题可先查看是否为版本问题，如不是可在下方给我留言，我会及时作出回复（评论系统较慢，望谅解），文中有关的css，js文件的引用需要自行配置，如需要完整版可前往我的 github 仓库下载源码 源码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Document&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"./bs/css/bootstrap.css\"&gt; &lt;script src='./bs/js/jquery.js'&gt;&lt;/script&gt; &lt;script src='./bs/js/bootstrap.js'&gt;&lt;/script&gt; &lt;style type=\"text/css\"&gt; .dropdown-size&#123; width: 100px; height: 40px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=\"container\"&gt; &lt;h1 class=\"page-header\"&gt;bootstrap&lt;/h1&gt; &lt;!-- 任何标签都可以做成下拉菜单 --&gt; &lt;div class=\"dropdown dropdown-size\"&gt; &lt;span data-toggle='dropdown'&gt;xiala&lt;/span&gt; &lt;ul class=\"dropdown-menu\"&gt; &lt;li class=\"dropdown-header\"&gt;&lt;a href=\"\"&gt;第一项&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;1&lt;/a&gt;&lt;/li&gt; &lt;li class=\"divider\"&gt;&lt;/li&gt; &lt;li class=\"dropdown-header\"&gt;第二项&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;2&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;2&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;2&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;br&gt; &lt;!-- 下拉菜单 --&gt; &lt;div class=\"row\"&gt; &lt;div class=\"dropdown col-sm-4 col-sm-offset-4\"&gt; &lt;button class=\"btn btn-default btn-lg\" data-toggle=\"dropdown\"&gt; Dropdown &lt;span class=\"caret\"&gt;&lt;/span&gt;&lt;!-- 倒三角箭头，在下拉、上拉菜单中用该类，三角方向会自动改变 --&gt; &lt;/button&gt; &lt;ul class=\"dropdown-menu\" style=\"left: 15px\"&gt; &lt;li class=\"dropdown-header\"&gt;第一项&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;Action&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;Another action&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;Something else here&lt;/a&gt;&lt;/li&gt; &lt;li class=\"divider\"&gt;&lt;/li&gt; &lt;li class=\"dropdown-header\"&gt;第二项&lt;/li&gt; &lt;li class=\"disabled\"&gt;&lt;a href=\"#\"&gt;Separated link&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;br&gt; &lt;!-- 上拉菜单 --&gt; &lt;div class=\"dropup\"&gt; &lt;button class=\"btn btn-info\" data-toggle='dropdown'&gt;上拉菜单&lt;span class=\"caret\"&gt;&lt;/span&gt;&lt;/button&gt; &lt;ul class=\"dropdown-menu\"&gt; &lt;li class=\"dropdown-header\"&gt;第一项&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;Acti&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;Anoth&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;Somet&lt;/a&gt;&lt;/li&gt; &lt;li class=\"divider\"&gt;&lt;/li&gt; &lt;li class=\"dropdown-header\"&gt;第二项&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;Separa&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;br&gt; &lt;!-- 按钮式下拉菜单 --&gt; &lt;div class=\"btn-group\"&gt; &lt;button class=\"btn btn-info dropdown-toggle\" data-toggle='dropdown'&gt;单按钮下拉菜单&lt;span class=\"caret\"&gt;&lt;/span&gt;&lt;/button&gt; &lt;ul class=\"dropdown-menu\"&gt; &lt;li&gt;&lt;a href=\"\"&gt;1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;1&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;!-- 分裂式上拉菜单 --&gt; &lt;div class=\"btn-group dropup\"&gt; &lt;button class=\"btn btn-info\"&gt;分列式下拉菜单&lt;/button&gt; &lt;button class=\"btn btn-info dropdown-toggle\" data-toggle='dropdown'&gt;&lt;span class=\"caret\"&gt;&lt;/span&gt;&lt;/button&gt; &lt;ul class=\"dropdown-menu\"&gt; &lt;li&gt;&lt;a href=\"\"&gt;1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;1&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;br&gt; &lt;!-- 组合按钮 --&gt; &lt;div class=\"btn-group btn-group-justified\"&gt; &lt;div class=\"btn-group\"&gt; &lt;button class=\"btn btn-info\"&gt;按钮&lt;/button&gt; &lt;/div&gt; &lt;div class=\"btn-group\"&gt; &lt;button class=\"btn btn-info\"&gt;按钮&lt;/button&gt; &lt;/div&gt; &lt;div class=\"btn-group\"&gt; &lt;button class=\"btn btn-info\"&gt;按钮&lt;/button&gt; &lt;/div&gt; &lt;/div&gt; &lt;br&gt; &lt;div class=\"btn-toolbar\"&gt; &lt;div class=\"btn-group btn-group-lg\"&gt; &lt;button class=\"btn btn-info\"&gt;按钮&lt;/button&gt; &lt;button class=\"btn btn-info\"&gt;按钮&lt;/button&gt; &lt;button class=\"btn btn-info\"&gt;按钮&lt;/button&gt; &lt;/div&gt; &lt;!-- 组合按钮下拉菜单 --&gt; &lt;div class=\"btn-group-vertical\"&gt; &lt;button class=\"btn btn-primary\"&gt;按钮&lt;/button&gt; &lt;button class=\"btn btn-primary\"&gt;按钮&lt;/button&gt; &lt;div class=\"btn-group\"&gt; &lt;button class=\"btn btn-success dropdown-toggle\" data-toggle='dropdown'&gt;下拉菜单&lt;span class=\"caret\"&gt;&lt;/span&gt;&lt;/button&gt; &lt;ul class=\"dropdown-menu\"&gt; &lt;li class=\"dropdown-header\"&gt;&lt;a href=\"\"&gt;第一项&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;1&lt;/a&gt;&lt;/li&gt; &lt;li class=\"divider\"&gt;&lt;/li&gt; &lt;li class=\"dropdown-header\"&gt;第二项&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;2&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;2&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"\"&gt;2&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/body&gt; 演示地址","categories":[{"name":"bootstrap3快速调用","slug":"bootstrap3快速调用","permalink":"http://www.guliansheng.club/categories/bootstrap3%E5%BF%AB%E9%80%9F%E8%B0%83%E7%94%A8/"}],"tags":[{"name":"bootstrap","slug":"bootstrap","permalink":"http://www.guliansheng.club/tags/bootstrap/"},{"name":"下拉菜单","slug":"下拉菜单","permalink":"http://www.guliansheng.club/tags/%E4%B8%8B%E6%8B%89%E8%8F%9C%E5%8D%95/"},{"name":"按钮组","slug":"按钮组","permalink":"http://www.guliansheng.club/tags/%E6%8C%89%E9%92%AE%E7%BB%84/"}]},{"title":"bootstrap3快速调用2","slug":"bootstrap/bootstrap3快速调用2","date":"2018-09-11T09:18:28.000Z","updated":"2018-09-11T09:22:34.836Z","comments":true,"path":"2018/09/11/bootstrap/bootstrap3快速调用2/","link":"","permalink":"http://www.guliansheng.club/2018/09/11/bootstrap/bootstrap3%E5%BF%AB%E9%80%9F%E8%B0%83%E7%94%A82/","excerpt":"本篇章需要有一定的bootstrap基础，这里主要是将一些常用的功能集合起来，方便直接调用，并且相关代码已经经过处理可以直接使用，不需要额外调试，如发现问题可先查看是否为版本问题，如不是可在下方给我留言，我会及时作出回复（评论系统较慢，望谅解），文中有关的css，js文件的引用需要自行配置，如需要完整版可前往我的 github 仓库下载源码","text":"本篇章需要有一定的bootstrap基础，这里主要是将一些常用的功能集合起来，方便直接调用，并且相关代码已经经过处理可以直接使用，不需要额外调试，如发现问题可先查看是否为版本问题，如不是可在下方给我留言，我会及时作出回复（评论系统较慢，望谅解），文中有关的css，js文件的引用需要自行配置，如需要完整版可前往我的 github 仓库下载源码 源码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\"&gt; &lt;title&gt;Document&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"./bs/css/bootstrap.css\"&gt; &lt;script src='./bs/js/jquery.js'&gt;&lt;/script&gt; &lt;script src='./bs/js/bootstrap.js'&gt;&lt;/script&gt; &lt;style type=\"text/css\"&gt; *&#123; font-family: 微软雅黑; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=\"container\"&gt;&lt;h1 class=\"page-header\"&gt;bootstrap&lt;/h1&gt;&lt;form action=\"\"&gt; &lt;div class=\"form-group \"&gt; &lt;label&gt;用户名：&lt;/label&gt; &lt;input type=\"text\" class=\"form-control\" placeholder=\"username\" maxlength=\"6\"&gt; &lt;/div&gt; &lt;div class=\"form-group\"&gt; &lt;label&gt;密码：&lt;/label&gt; &lt;input type=\"password\" class=\"form-control\" placeholder=\"password\" maxlength=\"8\"&gt; &lt;/div&gt; &lt;div class=\"form-group\"&gt; &lt;!-- 文本域cols控制文本列数，rows控制文本行数，resize控制文本域是否可变大小 --&gt; &lt;textarea class=\"form-control\" rows='10' style=\"resize: none;\"&gt;&lt;/textarea&gt; &lt;/div&gt; &lt;div class=\"form-group\"&gt; &lt;select class=\"form-control\" size=\"2\" multiple&gt; &lt;option value=\"城市\"&gt;北京&lt;/option&gt; &lt;option value=\"城市\"&gt;北京&lt;/option&gt; &lt;option value=\"城市\"&gt;北京&lt;/option&gt; &lt;option value=\"城市\"&gt;北京&lt;/option&gt; &lt;/select&gt; &lt;/div&gt; &lt;div class=\"form-group\"&gt; &lt;label class=\"checkbox-inline\"&gt;&lt;input type=\"checkbox\" name=\"\" disabled&gt;篮球&lt;/label&gt; &lt;label class=\"checkbox-inline\"&gt;&lt;input type=\"checkbox\" name=\"\"&gt;篮球&lt;/label&gt; &lt;label class=\"checkbox-inline\"&gt;&lt;input type=\"checkbox\" name=\"\" checked&gt;篮球&lt;/label&gt; &lt;label class=\"checkbox-inline\"&gt;&lt;input type=\"checkbox\" name=\"\"&gt;篮球&lt;/label&gt; &lt;/div&gt; &lt;div class=\"form-group\"&gt; &lt;label class=\"radio-inline\"&gt;&lt;input name='zq' type=\"radio\"&gt;足球&lt;/label&gt; &lt;/div&gt; &lt;div class=\"form-group\"&gt; &lt;label class=\"radio-inline\"&gt;&lt;input name='zq' type=\"radio\"&gt;足球&lt;/label&gt; &lt;/div&gt; &lt;div class=\"form-group\"&gt; &lt;label class=\"radio-inline\"&gt;&lt;input name=\"zq\" type=\"radio\"&gt;足球&lt;/label&gt; &lt;/div&gt; &lt;div class=\"form-group\"&gt; &lt;label class=\"radio-inline\"&gt;&lt;input name=\"zq\" type=\"radio\"&gt;足球&lt;/label&gt; &lt;/div&gt; &lt;div class=\"form-group has-feedback\"&gt; &lt;!--input-group 输入框组 ，内部文字放在类input-group-addon div中,输入框不用添加类input-group-addon--&gt; &lt;div class=\"input-group \"&gt; &lt;div class=\"input-group-addon\"&gt;$&lt;/div&gt; &lt;input type=\"text\" class=\"form-control\"&gt; &lt;/div&gt; &lt;span class=\"form-control-feedback glyphicon glyphicon-tags\"&gt;&lt;/span&gt; &lt;/div&gt; &lt;div class=\"form-group\"&gt; &lt;input type=\"submit\" value=\"Ok\" class=\"btn btn-primary btn-sm\"&gt; &lt;input type=\"reset\" value=\"Concel\" class=\"btn btn-danger btn-sm\"&gt; &lt;/div&gt;&lt;/form&gt;&lt;!-- 列表横排 --&gt;&lt;form class=\"form-inline\"&gt; &lt;div class=\"form-group\"&gt; &lt;input type=\"text\" class=\"form-control\"&gt; &lt;/div&gt; &lt;div class=\"form-group\"&gt; &lt;input type=\"text\" class=\"form-control\"&gt; &lt;/div&gt;&lt;/form&gt;&lt;br&gt;&lt;!-- 水平排列列表 --&gt;&lt;form action=\"\" class=\"form-horizontal\"&gt;&lt;div class=\"form-group has-success has-feedback\"&gt;&lt;!-- label内的文字会加粗 --&gt; &lt;label class=\"col-sm-2 control-label\"&gt;用户名&lt;/label&gt; &lt;div class=\"col-sm-6\"&gt; &lt;input type=\"text\" class=\"form-control\"&gt; &lt;span class=\"glyphicon glyphicon-user form-control-feedback\" aria-hidden='true'&gt;&lt;/span&gt; &lt;/div&gt;&lt;/div&gt;&lt;div class=\"form-group has-error has-feedback\"&gt; &lt;label class=\"col-sm-2 control-label\"&gt;密码&lt;/label&gt; &lt;div class=\"col-sm-6\"&gt; &lt;input type=\"text\" class=\"form-control\"&gt; &lt;span class=\" glyphicon glyphicon-remove form-control-feedback\"&gt;&lt;/span&gt; &lt;/div&gt;&lt;/div&gt;&lt;!-- form-control-static可以将表单中的p标签中的文字对其排列 --&gt;&lt;div class=\"form-group has-warning\"&gt; &lt;label class=\"col-sm-2 control-label\"&gt;邮箱&lt;/label&gt; &lt;div class=\"col-sm-10 \"&gt; &lt;p class=\" form-control-static\"&gt;272889889@qq.com&lt;/p&gt; &lt;/div&gt;&lt;/div&gt;&lt;div class=\"col-sm-8 col-sm-offset-2\"&gt; &lt;div class=\"form-group has-success has-feedback\"&gt; &lt;label class=\"control-label\"&gt;Input group with success&lt;/label&gt; &lt;div class=\"input-group\"&gt; &lt;span class=\"input-group-addon\"&gt;@&lt;/span&gt; &lt;input type=\"text\" class=\"form-control\"&gt; &lt;/div&gt; &lt;span class=\"glyphicon glyphicon-ok form-control-feedback\"&gt;&lt;/span&gt;&lt;p class=\"help-block\"&gt;表单框帮助提示&lt;/p&gt; &lt;/div&gt;&lt;/div&gt;&lt;div class=\"form-group\"&gt; &lt;div class=\"col-sm-10 col-sm-offset-2\"&gt; &lt;input type=\"submit\" value=\"Ok\" class='btn btn-primary btn-sm'&gt; &lt;input type=\"reset\" value=\"Concel\" class=\"btn btn-danger btn-sm\"&gt; &lt;/div&gt;&lt;/div&gt;&lt;/form&gt;&lt;/div&gt;&lt;/body&gt; 演示地址","categories":[{"name":"bootstrap3快速调用","slug":"bootstrap3快速调用","permalink":"http://www.guliansheng.club/categories/bootstrap3%E5%BF%AB%E9%80%9F%E8%B0%83%E7%94%A8/"}],"tags":[{"name":"bootstrap","slug":"bootstrap","permalink":"http://www.guliansheng.club/tags/bootstrap/"},{"name":"表单","slug":"表单","permalink":"http://www.guliansheng.club/tags/%E8%A1%A8%E5%8D%95/"}]},{"title":"bootstrap3快速调用1","slug":"bootstrap/bootstrap3快速调用1","date":"2018-09-11T07:47:51.000Z","updated":"2018-09-11T09:16:18.751Z","comments":true,"path":"2018/09/11/bootstrap/bootstrap3快速调用1/","link":"","permalink":"http://www.guliansheng.club/2018/09/11/bootstrap/bootstrap3%E5%BF%AB%E9%80%9F%E8%B0%83%E7%94%A81/","excerpt":"本篇章需要有一定的bootstrap基础，这里主要是将一些常用的功能集合起来，方便直接调用，并且相关代码已经经过处理可以直接使用，不需要额外调试，如发现问题可先查看是否为版本问题，如不是可在下方给我留言，我会及时作出回复（评论系统较慢，望谅解），文中有关的css，js文件的引用需要自行配置，如需要完整版可前往我的 github 仓库下载源码","text":"本篇章需要有一定的bootstrap基础，这里主要是将一些常用的功能集合起来，方便直接调用，并且相关代码已经经过处理可以直接使用，不需要额外调试，如发现问题可先查看是否为版本问题，如不是可在下方给我留言，我会及时作出回复（评论系统较慢，望谅解），文中有关的css，js文件的引用需要自行配置，如需要完整版可前往我的 github 仓库下载源码 源码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Document&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"./bs/css/bootstrap.css\"&gt; &lt;link rel=\"stylesheet\" href=\"./bs/js/jquery.js\"&gt; &lt;link rel=\"stylesheet\" href=\"./bs/js/bootstrap.js\"&gt; &lt;style type=\"text/css\"&gt; .ul2&#123; height: 40px; &#125; .ul2 li&#123; width: 100px; height: 40px; float: left; &#125; mark&#123; background: #a2f0f0; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=\"container\"&gt; &lt;h1 class=\"page-header\"&gt;bootstrap &lt;small&gt;作者：gu&lt;/small&gt;&lt;/h1&gt; &lt;p class=\"lead text-justify\"&gt;bootstrap is very good!bootstrap is very good!&lt;del&gt;bootstrap is very good!&lt;/del&gt;&lt;mark&gt;bootstrap is very good!&lt;/mark&gt;bootstrap is very good!&lt;small&gt;bootstrap is very good!&lt;/small&gt;bootstrap is very good!bootstrap is very good!bootstrap is very good!bootstrap is very good!bootstrap is very good!bootstrap is very good!bootstrap is very good!bootstrap is very good!bootstrap is very good!bootstrap is very good!bootstrap is very good!&lt;/p&gt; &lt;p class=\"page-header text-center\"&gt;bootstrap&lt;/p&gt; &lt;dl&gt; &lt;dt&gt;选择题：&lt;/dt&gt; &lt;dd&gt;a.bootstrap&lt;/dd&gt; &lt;dd&gt;a.bootstrap&lt;/dd&gt; &lt;dd&gt;a.bootstrap&lt;/dd&gt; &lt;dd&gt;a.bootstrap&lt;/dd&gt; &lt;dt&gt;选择题：&lt;/dt&gt; &lt;dd&gt;a.bootstrap&lt;/dd&gt; &lt;dd&gt;a.bootstrap&lt;/dd&gt; &lt;dd&gt;a.bootstrap&lt;/dd&gt; &lt;dd&gt;a.bootstrap&lt;/dd&gt; &lt;/dl&gt; &lt;dl class=\"dl-horizontal\"&gt; &lt;dt&gt;选择题：&lt;/dt&gt; &lt;dd&gt;a.bootstrap&lt;/dd&gt; &lt;dd&gt;a.bootstrap&lt;/dd&gt; &lt;dd&gt;a.bootstrap&lt;/dd&gt; &lt;dd&gt;a.bootstrap&lt;/dd&gt; &lt;dt&gt;选择题：&lt;/dt&gt; &lt;dd&gt;a.bootstrap&lt;/dd&gt; &lt;dd&gt;a.bootstrap&lt;/dd&gt; &lt;dd&gt;a.bootstrap&lt;/dd&gt; &lt;dd&gt;a.bootstrap&lt;/dd&gt; &lt;/dl&gt; &lt;!-- 无样式列表，同时去除ul内部padding --&gt; &lt;ul class=\"list-unstyled\"&gt; &lt;li&gt;list&lt;/li&gt; &lt;li&gt;list&lt;/li&gt; &lt;li&gt;list&lt;/li&gt; &lt;li&gt;list&lt;/li&gt; &lt;li&gt;list&lt;/li&gt; &lt;/ul&gt; &lt;ul class=\"list-inline ul2\"&gt; &lt;li&gt;first&lt;/li&gt; &lt;li&gt;last&lt;/li&gt; &lt;li&gt;last&lt;/li&gt; &lt;li&gt;last&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;is very&lt;code&gt;section&lt;/code&gt; good&lt;/p&gt; &lt;p&gt;按下&lt;kbd&gt;ctrl+shift&lt;/kbd&gt;&lt;/p&gt; &lt;samp&gt;This text is meant to be treated as sample output from a computer program.&lt;/samp&gt; &lt;p&gt;&lt;pre&gt; 如果要原样输出html代码，则&lt;,&gt;要用编码形式; if(i&lt;0)&#123; return false; &#125; &lt;/pre&gt;&lt;/p&gt; &lt;p&gt;未用pre标签：if(i&lt;0)&#123; return false; &#125; &lt;/p&gt; &lt;div class=\"table-responsive\"&gt;&lt;!-- 响应式表格，当列数少时不会出现横向滚动条 --&gt; &lt;table class=\"table table-striped table-hover table-bordered \"&gt; &lt;tr&gt; &lt;th&gt;ID&lt;/th&gt; &lt;th&gt;用户名&lt;/th&gt; &lt;th&gt;密码&lt;/th&gt; &lt;th&gt;ID&lt;/th&gt; &lt;th&gt;用户名&lt;/th&gt; &lt;th&gt;密码&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;/tr&gt; &lt;tr &gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;/tr&gt; &lt;tr class=\"success\"&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;/tr&gt; &lt;tr class=\"info\"&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;/tr&gt; &lt;tr class=\"warning\"&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;/tr&gt; &lt;tr class=\"danger\"&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;/tr&gt; &lt;tr class=\"active\"&gt; &lt;td class=\"warning\"&gt;1&lt;/td&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;td class=\"warning\"&gt;1&lt;/td&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;p&gt; &lt;button class=\"btn btn-default btn-lg\"&gt;default按钮&lt;/button&gt; &lt;button class=\"btn btn-primary\"&gt;primary按钮&lt;/button&gt; &lt;button class=\"btn btn-success btn-sm\"&gt;success按钮&lt;/button&gt; &lt;button class=\"btn btn-info btn-xs\"&gt;info按钮&lt;/button&gt; &lt;button class=\"btn btn-warning \"&gt;warning按钮&lt;/button&gt; &lt;button class=\"btn btn-danger \"&gt;danger按钮&lt;/button&gt; &lt;button class=\"btn btn-link \"&gt;link按钮&lt;/button&gt; &lt;button class=\"btn btn-block btn-info\"&gt;块级标签按钮&lt;/button&gt; &lt;button class=\"btn btn-danger active\"&gt;激活状态&lt;/button&gt; &lt;button type=\"button\" class=\"btn btn-primary\" disabled&gt;禁用状态&lt;/button&gt; &lt;/p&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 演示地址","categories":[{"name":"bootstrap3快速调用","slug":"bootstrap3快速调用","permalink":"http://www.guliansheng.club/categories/bootstrap3%E5%BF%AB%E9%80%9F%E8%B0%83%E7%94%A8/"}],"tags":[{"name":"bootstrap","slug":"bootstrap","permalink":"http://www.guliansheng.club/tags/bootstrap/"},{"name":"表格","slug":"表格","permalink":"http://www.guliansheng.club/tags/%E8%A1%A8%E6%A0%BC/"},{"name":"按钮","slug":"按钮","permalink":"http://www.guliansheng.club/tags/%E6%8C%89%E9%92%AE/"},{"name":"排版","slug":"排版","permalink":"http://www.guliansheng.club/tags/%E6%8E%92%E7%89%88/"}]},{"title":"面向对象4","slug":"面向对象/面向对象4","date":"2018-09-11T02:54:50.000Z","updated":"2018-09-19T07:54:43.898Z","comments":true,"path":"2018/09/11/面向对象/面向对象4/","link":"","permalink":"http://www.guliansheng.club/2018/09/11/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A14/","excerpt":"本篇章讲述的是js中的面向对象编程，第四节主要介绍函数的几种形式和类数组的概念","text":"本篇章讲述的是js中的面向对象编程，第四节主要介绍函数的几种形式和类数组的概念 函数函数的属性1function Fn()&#123;&#125; length 形参的个数 name “Fn” 函数名 prototype 类的原型,在原型上定义的方法都是当前”Fn”这个类实例的公有方法 proto 把函数当做一个普通对象,指向Function这个类的原型 函数的三个角色 普通函数 : 它本身就是一个普通的函数，执行的时候形成私有的作用域（闭包），形参赋值，预解释，代码执行，执行完成后栈内存销毁/不销毁了 类 ：它有自己的实例，也有一个叫做prototype属性是自己的原型，它的实例都可以指向自己的原型 普通对象 ：和var obj=()中的obj一样，就是一个普通的对象，它作为对象可以有一些自己的私有的属性，也可以通过proto 找到Function.prototype 123456789101112function Fn()&#123; var num = 500; this.x = 100;&#125;Fn.prototype.getX = function()&#123; console.log(this.x);&#125;Fn.aaa = 1000;var f = new Fn;console.log(f.num);console.log(f.aaa);var res = Fn(); Function.prototype是函数类型的值,但是相关操作和之前一模一样,是一个密名函数 类数组类数组集合 arguments HTMLCollection NodeList 类数组转数组1var ary = Array.prototype.slice.call(obj) 元素集合(HTMLCollection)和节点集合(NodeList),在ie6~8中不支持借用数组方法 arguments没有兼容性问题,在ie6~8中可以借用数组方法 使用try-catch编写兼容代码12345678910111213var utils=&#123; listToArray:function(likeAry)&#123; var ary=[]; try&#123; ary=Array.prototype.slice.call(likeAry); &#125;catch(e)&#123; for(var i=0;i&lt;likeAry.length;i++)&#123; ary[ary.length]=likeAry[i]; &#125; &#125; return ary; &#125;&#125;","categories":[{"name":"JavaScript面向对象","slug":"JavaScript面向对象","permalink":"http://www.guliansheng.club/categories/JavaScript%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"}],"tags":[{"name":"面向对象","slug":"面向对象","permalink":"http://www.guliansheng.club/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"},{"name":"函数","slug":"函数","permalink":"http://www.guliansheng.club/tags/%E5%87%BD%E6%95%B0/"},{"name":"类数组","slug":"类数组","permalink":"http://www.guliansheng.club/tags/%E7%B1%BB%E6%95%B0%E7%BB%84/"}]},{"title":"面向对象3","slug":"面向对象/面向对象3","date":"2018-09-11T02:51:04.000Z","updated":"2018-09-19T07:54:36.055Z","comments":true,"path":"2018/09/11/面向对象/面向对象3/","link":"","permalink":"http://www.guliansheng.club/2018/09/11/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A13/","excerpt":"本篇章讲述的是js中的面向对象编程，第三节主要介绍多种形式的继承","text":"本篇章讲述的是js中的面向对象编程，第三节主要介绍多种形式的继承 继承原型继承 “原型继承”是我们JS中最常用的一种继承方式 子类B想要继承父类A中的所有的属性和方法（私有+公有）,只需要让B.prototype=new A;即可 原型继承的特点:它是把父类中私有的 + 公有的都继承到了子类原型上(子类公有的),子类可以重写父类的属性和方法 核心：原型继承并不是把父类中的属性和方法克隆一份模一样的给B,而是让B和A之间增加了原型链的连接,以后B的实例b.想要用A中的getx方法,需要一级级的向上查找来使用 12345678910111213function A()&#123; this.name = 'this is A';&#125;A.prototype.getName = function()&#123; console.log(this.name)&#125;function B()&#123; this.name = 'this is B';&#125;B.prototype = new A;B.prototype.constructor = B;var b = new B;console.dir(b.getName()) call继承1234567891011function A()&#123; this.name = 'this is A';&#125;A.prototype.getName = function()&#123; console.log(this.name)&#125;function B()&#123; A.call(this);//将父类的私有属性和方法克隆一份,作为子类的私有属性和方法&#125;var b = new B;console.dir(b.getName()) 冒充对象继承 把父类私有的和公有的属性和方法克隆一份,作为子类的私有的属性和方法1234567891011121314function A()&#123; this.name = 'this is A';&#125;A.prototype.getName = function()&#123; console.log(this.name)&#125;function C()&#123; var temp = new A; for (var key in temp)&#123; this.[key] = temp[key]; &#125; temp = null;&#125;var c = new C; 混合模式继承 原型继承 + call继承 将父类私有的属性和方法克隆到子类的私有中,再将父类的私有和公有属性和方法添加到子类的公有中 12345678910111213function A()&#123; this.name = 'this is A';&#125;A.prototype.getName = function()&#123; console.log(this.name)&#125;function B()&#123; A.call(this);&#125;B.prototype = new A;B.prototype.constructor = B;var b = new B;console.dir(b.name) 寄生组合式继承 call继承 + Object.create() 父类私有的克隆到子类的私有中,父类的公有添加到子类的公有中 12345678910111213function A()&#123; this.name = 'this is A';&#125;A.prototype.getName = function()&#123; console.log(this.name)&#125;function B()&#123; A.call(this);//将父类的私有属性和方法克隆一份,作为子类的私有属性和方法&#125;B.prototype = Object.create(A.prototype);B.prototype.constructor = B;var b = new B;console.dir(b); 中间类继承法123456789function avgFn()&#123; console.log(arguments) arguments.__proto__ = Array.prototype; // arguments.sort(function (a,b)&#123;return a-b;&#125;); arguments.pop(); arguments.shift(); return eval(arguments.join(\"+\"))/arguments.length;&#125;console.log(avgFn(10,20,30,10,30,40,40))","categories":[{"name":"JavaScript面向对象","slug":"JavaScript面向对象","permalink":"http://www.guliansheng.club/categories/JavaScript%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"}],"tags":[{"name":"面向对象","slug":"面向对象","permalink":"http://www.guliansheng.club/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"},{"name":"继承","slug":"继承","permalink":"http://www.guliansheng.club/tags/%E7%BB%A7%E6%89%BF/"}]},{"title":"原型链和数据类型检测","slug":"面向对象/原型链和数据类型检测","date":"2018-09-11T02:32:47.000Z","updated":"2018-09-24T02:29:30.359Z","comments":true,"path":"2018/09/11/面向对象/原型链和数据类型检测/","link":"","permalink":"http://www.guliansheng.club/2018/09/11/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E5%8E%9F%E5%9E%8B%E9%93%BE%E5%92%8C%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E6%A3%80%E6%B5%8B/","excerpt":"本篇章讲述的是js中的面向对象编程，第二节主要介绍原型链和原型链中的查找机制","text":"本篇章讲述的是js中的面向对象编程，第二节主要介绍原型链和原型链中的查找机制 原型链和原型链的查找机制函数和对象 【函数】 普通函数、类（所有的类：内置类(Array…)、自己创建的类） 【对象】 普通对象、数组、正则、Math、arguments… 实例是对象类型的（除了基本类到的字面量创建的值） prototype的值也是对象类型的 函数也是对象类型的 … 数据类型基本数据类型(值类型) number：数字 除了常规的数字，还有NaN NaN not a number：不是一个数,但是属于number类型 NaN == NaN //=&gt;false ，NaN和其他任何值都不相等 isNaN()：检测值是否为有效数字，如果不是返回true，是有效数字返回false，同时在检测时值如果不是number，会将值转换为number类型再进行检测 string：字符串 boolean：布尔 Boolean()方法 只有0，NaN，空字符串，null，undefined这五个数据值转换为布尔类型的时候为false，其余都是true；包括对象、数组、正则、函数等；注意’0’、’null’、’false’、{}、[]也都是真值 false 除了和自身比较为 true 外，和 0，”” 比较也为 true null 只和 undefined 比较时为 true， 反过来 undefined 也仅和 null 比较为 true，没有第二个 0 除了和 false 比较为 true，还有空字符串 ‘’” 和空数组 [] 空字符串 ‘’ 除了和 false 比较为 true，还有一个数字 0 可以直接用!!代替Boolean()来使用，可以快速检测一个变量在判断中是true还是false null：空对象指针 null用typeof返回的是Object undefined：未定义 引用数据类型 object：对象 {}：普通对象 删除属性值12obj.xxx = null; //=&gt;假删除(让其属性值为null，但是属性还在对象中)delete obj.xxx; //=&gt;真删除(把整个属性都在对象中暴力移除) []：数组 /^$/：正则 … function：函数数据类型 普通函数 类(内置类，自己创建的类) 数据类型检测typeof 作用：检测数据类型的运算符，返回一个字符串，内容证明值是属于什么类型的 局限：无法将对象类型的中的数据类型进行细分 12345678910111213typeof typeof [] //=&gt;\"string\"typeof '基地搜' // =&gt; \"string\"typeof 234 // =&gt; \"number\"typeof undefined //=&gt;\"undefined\"typeof function()&#123;&#125; //=&gt;\"function\"typeof console.log //=&gt;\"function\"typeof null // =&gt;null： \"object\"typeof &#123;&#125; // =&gt;对象： \"object\"typeof [] // =&gt;数组： \"object\"typeof /^$/ // =&gt;正则： \"object\" //typeof还可以用来检测一个变量是否存在if(typeof a != 'undefined')&#123;alert('值存在')&#125; //不使用if(a)，是因为如果a未声明则会出错 instanceof 作用：检测某个实例是否属于这个类 局限：用字面量方式创建的基本数据类型用instanceof检测都为false，只能用于new创建的基本数据类型检测 constructor 作用：获取当前实例的构造器，可以处理基本数据类型 局限：我们可以把类的原型进行重写，在重写的时候可能出现把之前的constructor给覆盖了，这样检测出来的结构就是不正确的 Object.prototype.toString.call()： 作用：获取当前实例的所属类信息，可以写成({}).toString.call() 特点：返回当前方法执行的主体(方法中this)所属类的详细信息，所有数据类型都可以检测，包括null和undefined 最准确最常用的方式 toString()：不仅仅是转换为字符串 1.Number类型的toString(2/10/8)方法，可以将数字转化成字符串，并且可以改变进制 2.Boolean类型转化为字符串就是将true/false转化为字符串 3.Array类型，RegExp类型，Data类型，Function类型可以直接转化为字符串 4.null和undefined没有toString方法 5.Math.toString() // =&gt; “[object Math]”，因为Math自身没有toString方法，这里是使用Object.prototype上的公有方法toString 6.对象数据类型：({}).toString() // =&gt; “[object Object]”，原理同上 原型属性：prototype 所有函数数据类型都有的自带属性 这个属性值是一个对象，浏览器会默认给他开辟一个堆内存 在浏览器给prototype开辟的堆内存中有一个天生自带的属性：constructor，这个属性存储的值是当前函数本身 每一个对象都有一个proto的属性，这个属性指向当前实例所属类的prototype(如果不能确定他是谁的实例，都是Object的实例) 每一个类都把供实例调取的公共属性方法，存储到自己的原型上（原型prototype的作用就是存储一些公共的属性和方法，供它的实例调取使用） 123456CreateUsPerson.prototype.writeJs=function()&#123; console.log(\"my name is\"+this.name+\"，i can write is 啦！！\");&#125;var p1=new CreateJsPerson(\"尹华芝\",18);var p2=new CreateUsPerson(\"王小波\",48);console.log(pl.writeJs === p2.writeJs);//-&gt;true,公有属性是相同的 原型链 它是一种基于proto(隐式原型)向上查找的机制。当我们操作实例的某个属性或者方法的时候，首先找自己空间中私有的属性或者方法 找到了，则结束查找，使用自己私有的即可 没有找到，则基于proto找所属类的prototype，如果找到就用这个公有的，如果没找到，基于原型上的proto继续向上查找，一直找到Object.prototype的原型为止，如果在没有，操作的属性或者方法不存在 批量设置公有属性 重构原型对象的方式 =&gt; 自己新开辟一个维内存，存储我们公有的属性和方法，把浏览器原来给Fn.prototype开辟的那个替换掉 只有浏览器天生给Fn.prototype开的堆内存里面才有constructor，而我们自己开辟的这个堆内存没有这个属性，这样constructor指向就不在是Fn而是Object了，我们需要手动添加该属性指向Fn 123456789101112function Fn()&#123; this.x=100;&#125;Fn.prototype=&#123; constructor:Fn,//手动添加一个constructor属性指向Fn; a:function()&#123; &#125;, b:function()&#123; &#125;&#125;;var f = new Fn;console.log(f.constructor);//没做任何处理,此时是Object 用这种方式给内置类增加公有的属性 我们这种方式会把之前已经存在于原型上的属性和方法给替换掉，所以我们中这种方式修改内置类的话，浏览器是给屏蔽掉的 但是我们可以一个个的修改内置的方法，当我们通过下述方式在数组的原型上增加方法，如果方法名和原来内置的重复了，会把人家内置的修改掉 =&gt; 我们以后在内置类的原型上增加方法，命名都需要加特殊的前缀 123Array.prototype.sort=function()&#123; console.log(\"ok\");// this-&gt;ary 我们当前要操作的这个数组&#125; for-in 循环遍历对象时需要添加一个判断 if(obj.hasOwnProperty(key)){}，这样循环的就是私有属性 if(obj.propertyIsEnumerable(key)){}，循环可枚举的，合上述相同","categories":[{"name":"JavaScript面向对象","slug":"JavaScript面向对象","permalink":"http://www.guliansheng.club/categories/JavaScript%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"}],"tags":[{"name":"面向对象","slug":"面向对象","permalink":"http://www.guliansheng.club/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"},{"name":"原型链","slug":"原型链","permalink":"http://www.guliansheng.club/tags/%E5%8E%9F%E5%9E%8B%E9%93%BE/"},{"name":"原型链的查找机制","slug":"原型链的查找机制","permalink":"http://www.guliansheng.club/tags/%E5%8E%9F%E5%9E%8B%E9%93%BE%E7%9A%84%E6%9F%A5%E6%89%BE%E6%9C%BA%E5%88%B6/"},{"name":"数据类型检测","slug":"数据类型检测","permalink":"http://www.guliansheng.club/tags/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E6%A3%80%E6%B5%8B/"}]},{"title":"面向对象1","slug":"面向对象/面向对象1","date":"2018-09-11T01:58:47.000Z","updated":"2018-09-19T07:54:23.563Z","comments":true,"path":"2018/09/11/面向对象/面向对象1/","link":"","permalink":"http://www.guliansheng.club/2018/09/11/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A11/","excerpt":"本篇章讲述的是js中的面向对象编程，其中包含面向对象的概念，原型链机制，函数的继承等，第一节主要介绍概念相关知识","text":"本篇章讲述的是js中的面向对象编程，其中包含面向对象的概念，原型链机制，函数的继承等，第一节主要介绍概念相关知识 概念对象 万物皆对象 类 对象的具体细分 按照功能特点进行分类：大类，小类 类都是函数数据类型的 实例 类中具体的一个事物 拿出类别中的具体一个实例进行研究，那么当前类别下的其他实例也具备这特点和特征 实例都是对象数据类型的 构造函数执行机制像普通函数执行一样，形成一个私有的作用域(栈内存) 形参赋值 变量提升 都是私有变量 创建堆内存 在JS代码自上而下执行之前，首先在当前形成的私有栈中创建一个对象（创建一个堆内存：暂时不存储任何的东西），并且让函数中的执行主体（THIS）指向这个新的堆内存（THIS===创建的对象），堆内存的地址赋值给了THIS 代码自上而下执行 也就是开始创建的对象其实就是当前Fn这个类的一个实例，我们让this指向这个实例，代码执行中的this.xxx=xxx都是给实例设置“私有属性”最后浏览器会把默认创建的实例返回，供外面接收。 代码执行完成 把之前创建的堆内存地址返回(浏览器默认返回，不需要return操作) 多次执行new操作 就是把上面的操作克隆一份，会形成新的实例(新的内存空间)，所以说实例是独立分开的","categories":[{"name":"JavaScript面向对象","slug":"JavaScript面向对象","permalink":"http://www.guliansheng.club/categories/JavaScript%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"}],"tags":[{"name":"面向对象","slug":"面向对象","permalink":"http://www.guliansheng.club/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"},{"name":"面向对象概念","slug":"面向对象概念","permalink":"http://www.guliansheng.club/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%A6%82%E5%BF%B5/"},{"name":"函数执行","slug":"函数执行","permalink":"http://www.guliansheng.club/tags/%E5%87%BD%E6%95%B0%E6%89%A7%E8%A1%8C/"}]},{"title":"事件绑定","slug":"js基础/事件绑定","date":"2018-09-10T13:24:34.000Z","updated":"2018-10-08T09:59:50.834Z","comments":true,"path":"2018/09/10/js基础/事件绑定/","link":"","permalink":"http://www.guliansheng.club/2018/09/10/js%E5%9F%BA%E7%A1%80/%E4%BA%8B%E4%BB%B6%E7%BB%91%E5%AE%9A/","excerpt":"本章节主要讲述事件的基础、事件的传播机制和DOM二级事件绑定 文中出现的html代码样式请自行设置","text":"本章节主要讲述事件的基础、事件的传播机制和DOM二级事件绑定 文中出现的html代码样式请自行设置 事件非常用事件 onmousewheel (鼠标滚轮滚动行为) onresize (window.onresize浏览器窗口大小改变事件) onunload (浏览器关闭事件) 鼠标事件 原型链: MouseEvent –&gt; UIEevent –&gt; Event –&gt; Object MouseEvent 记录的是页面中唯一一个鼠标每一次触发时候的相关信息,和到底在哪个元素上触发的没有关系 pageX | Y兼容处理 : event.pageX | Y = event.pageX | Y || (e.clientX + (document.documentElement.scrollLeft | Top || document.body.scrollLeft | Top)); 事件传播机制 先进行捕获阶段,再到目标阶段(可以不加),最后是冒泡阶段 使用DOM零级事件给元素的某一个行为绑定的方法,都是在行为触发后的冒泡阶段把方法执行的 无论元素是否绑定行为方法,都会触发相关事件,并进行事件传播,只是不绑定方法的不会有方法被执行 事件监听12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970&lt;body&gt; &lt;div class=\"box1\"&gt; &lt;div class=\"box2\"&gt; &lt;div class=\"box3\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;script&gt; let box1=document.querySelector('.box1'); let box2=document.querySelector('.box2'); let box3=document.querySelector('.box3'); var Event = &#123; addEvent: function(element,type,callback)&#123; if(element.addEventListener)&#123; element.addEventListener(type,callback,false); &#125;else if(element.attachEvent)&#123; element.attachEvent('on' + type,callback);//只在冒泡阶段发生,ie6~8兼容,也可以在ie9+使用 &#125; &#125;, removeEvent: function(element,type,callback)&#123; if(element.removeEventListener)&#123; element.removeEventListener(type,callback,false); &#125;else&#123; element.detachEvent('on' + type, callback); &#125; &#125;, getEvent: function(event)&#123; event = event || window.event; return event; &#125;, getTarget: function(event)&#123; if(window.event)&#123;event=window.event&#125; return event.target || event.srcElement; &#125;, stopPropagation: function(event)&#123; if(window.event)&#123;event=window.event&#125; if(event.stopPropagation)&#123; event.stopPropagation(); &#125;else&#123; event.cancelBubble = true; &#125; &#125;, preventDefault: function(event)&#123; if(window.event)&#123;event=window.event&#125;//兼容ie获取事件对象； if(event.prevenDefault)&#123; event.preventDefault(); &#125;else&#123; event.returnValue = false; &#125; &#125; &#125; Event.addEvent(box3,'click',function click(event)&#123; alert(box3.className); console.log(Event.getEvent(event.target)); //参数:元素对象 , 移除的行为 , 移除的绑定方法名 Event.removeEvent(box3,'click',click); &#125;); Event.addEvent(box2,'click',function click(event)&#123; alert(box2.className); console.log(event); console.log(Event.getEvent(event.type)); Event.removeEvent(box2,'click',click); &#125;); Event.addEvent(box1,'click',function click(event)&#123; alert(box1.className); console.log(Event.getEvent(event.target)); Event.removeEvent(box3,'click',click); &#125;);&lt;/script&gt; 事件委托 利用事件的冒泡机制(触发当前元素的某个行为,他父级所有元素的相关行为都会触发),如果一个容器中有很多元素都绑定点击事件,我们没必要一个个的绑定了,只需要给最外层容器绑定一个点击事件即可,在这个方法执行的时候,通过事件源的区分来进行不同的操作 1234567891011121314151617181920&lt;body&gt; &lt;ul id=\"list\"&gt; &lt;li id=\"item1\" &gt;item1&lt;/li&gt; &lt;li id=\"item2\" &gt;item2&lt;/li&gt; &lt;li id=\"item3\" &gt;item3&lt;/li&gt; &lt;/ul&gt;&lt;/body&gt;&lt;script&gt; var list = document.getElementById(\"list\"); document.addEventListener(\"click\",function(event)&#123; var target = event.target;//event.target返回触发该事件的元素； if(target.tagName == \"LI\")&#123;//当元素为li标签时（tagName和nodeName都可以） //TODO alert(target.innerHTML); &#125; &#125;) var node=document.createElement(\"li\"); node.innerHTML='这还少'; list.appendChild(node);&lt;/script&gt; DOM二级事件绑定原理 是让元素对象通过原型链一直找到EventTarget这个内置类原型上的addEventListener方法实现的 二级事件绑定和零级事件绑定的区别 DOM零级事件绑定 : 只能给一个元素的某个行为绑定一次方法, 第二次绑定会把之前的覆盖掉 DOM二级事件绑定 : 可以给某个元素同一个行为绑定多个 “不同” 的方法 , 如果方法相同只能留一个 , 但是在捕获和冒泡阶段可以为同一个行为绑定同一个方法,因为是在不同阶段执行的 DOM零中的事件类型都可以绑定 , 并且DOM二级中提供了一些DOM零级没有的行为类型 (DOMContentLoaded : 当页面中的DOM结构[html结构]加载完成时触发的行为) window.onload = function(){} -&gt; 当页面中的所有资源加载完成(图片 , HTML结构 , 音视频 …)才会执行后面的函数;并且同一个页面中只能用一次 , 后面再写会把前面的覆盖掉; =&gt; 因为他是采用DOM零级事件绑定的 jQuery: $(document).ready(function(){}) -&gt; $(function(){}) 只要当前页面中的HTML结构加载完成就会执行对应的函数;并且同一个页面中可以出现多次;这是因为他采用DOM二级事件绑定 , 并且绑定的行为是DOM二级中新增的DOMContentLoaded 绑定和移除 绑定: el.addEventListener(‘行为’ , 方法名 , 传播方式); 移除: el.removeEventListener(‘行为’ , 方法名 , 传播方式); 执行过程 可以给某个元素同一个行为绑定多个 “不同” 的方法 , 如果方法相同只能留一个 , 但是在捕获和冒泡阶段可以为同一个行为绑定同一个方法,因为是在不同阶段执行的 当行为触发 , 会按照绑定的先后顺序依次把绑定的方法执行 执行的方法中的this就是当前被绑定事件的元素本身 ie6~8兼容问题 顺序问题：执行的时候顺序是混乱的，标淮浏览器是按照绑定顺序依次执行的 重复问题：IE6～8可以给同一个元素的同一个行为绑定多个相同的方法 this问题：IE6～8中当方法执行的时候，方法中的this不是当前绑定的元素而是window","categories":[{"name":"JavaScript基础","slug":"JavaScript基础","permalink":"http://www.guliansheng.club/categories/JavaScript%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"js基础","slug":"js基础","permalink":"http://www.guliansheng.club/tags/js%E5%9F%BA%E7%A1%80/"},{"name":"事件基础","slug":"事件基础","permalink":"http://www.guliansheng.club/tags/%E4%BA%8B%E4%BB%B6%E5%9F%BA%E7%A1%80/"},{"name":"二级事件绑定","slug":"二级事件绑定","permalink":"http://www.guliansheng.club/tags/%E4%BA%8C%E7%BA%A7%E4%BA%8B%E4%BB%B6%E7%BB%91%E5%AE%9A/"}]},{"title":"正则表达式","slug":"js基础/正则表达式","date":"2018-09-10T13:07:06.000Z","updated":"2018-09-30T07:03:54.254Z","comments":true,"path":"2018/09/10/js基础/正则表达式/","link":"","permalink":"http://www.guliansheng.club/2018/09/10/js%E5%9F%BA%E7%A1%80/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/","excerpt":"本章节介绍正则的相关知识，详细介绍了正则的基本概念、特性和应用 本文参考W3School文档","text":"本章节介绍正则的相关知识，详细介绍了正则的基本概念、特性和应用 本文参考W3School文档 正则表达式正则含义 它就是一个规则,用来处理字符串的一个规则 创建正则 字面量方式: 1var reg = /\\d/; 实例创建方式: 1var reg = new RegExp(\"\"); 正则两种创建方式是有区别的 在字面量方式中 , ‘//’之间包起来的所有 内容都是元字符,有的具有特殊的意义,大部分都是代表本身含义的普通元字符12345678910var name = 'gu'var reg = /^\\d+\"+name+\"\\d+$/;//并不是字符串拼接console.log(reg.test('200gu222')) //-&gt;flaseconsole.log(reg.test('200'''guuu'222)) //-&gt;true//所以这种需求只能用实例方式创建var name = 'gu';reg = new RegExp(\"^\\\\d+\"+name+\"\\\\d+$\",\"g\");//这种方式创建时要注意转义字符console.log(reg.test('200gu222')) //-&gt;true; 字面量中直接写\\d就可以了,实例方式中需要转义 \\\\d 修饰符 修饰符 说明 i 执行对大小写不敏感的匹配 g 执行全局匹配（查找所有匹配而非在找到第一个匹配后停止） m 执行多行匹配 s 正则中的 “.”会匹配所有字符，包括换行和结束符 表达式 表达式 说明 [abc] 查找方括号之间的任何字符 [^abc] 查找任何不在方括号之间的字符 [0-9] 查找任何从 0 至 9 的数字 [a-z] 查找任何从小写 a 到小写 z 的字符 [A-Z] 查找任何从大写 A 到大写 Z 的字符 [A-z] 查找任何从大写 A 到小写 z 的字符 [adgk] 查找给定集合内的任何字符 [^adgk] 查找给定集合外的任何字符 (red/blue/green) 查找任何指定的选项 注意：本文中的表格无法转义“|”，因此上方的“/”实际是“|” 元字符 元字符 描述 . 查找单个字符，除了换行和行结束符 \\w 查找单词字符 \\W 查找非单词字符 \\d 查找数字 \\D 查找非数字字符 \\s 查找空白字符 \\S 查找非空白字符 \\b 匹配单词边界 \\B 匹配非单词边界 \\0 查找 NUL 字符 \\n 查找换行符 \\f 查找换页符 \\r 查找回车符 \\t 查找制表符 \\v 查找垂直制表符 \\xxx 查找以八进制数 xxx 规定的字符 \\xdd 查找以十六进制数 dd 规定的字符 \\uxxxx 查找以十六进制数 xxxx 规定的 Unicode 字符 量词 量词 描述 n+ 匹配任何包含至少一个 n 的字符串 n* 匹配任何包含零个或多个 n 的字符串 n? 匹配任何包含零个或一个 n 的字符串 n{X} 匹配包含 X 个 n 的序列的字符串 n{X,Y} 匹配包含 X 至 Y 个 n 的序列的字符串 n{X,} 匹配包含至少 X 个 n 的序列的字符串 n$ 匹配任何结尾为 n 的字符串 ^n 匹配任何开头为 n 的字符串 ?=n 匹配任何其后紧接指定字符串 n 的字符串 ?!n 匹配任何其后没有紧接指定字符串 n 的字符串 支持正则表达式的 String 对象的方法 方法 描述 search 检索与正则表达式相匹配的值 match 找到一个或多个正则表达式的匹配 replace 替换与正则表达式匹配的子串 split 把字符串分割为字符串数组 处理字符串 匹配 : 使用reg.test(str)判断一个字符串是否符合我们制定的规则 1234var reg = /\\d/;console.log(reg.test('zhu')); //-&gt;falseconsole.log(reg.test('1')); //-&gt;trueconsole.log(reg.test('zhufeng01')); //-&gt;true 捕获 : 使用reg.exec(str)把字符串中符合我们正则规则的内容捕获到 123var reg = /\\d/;console.log(reg.exec('zhu')); //-&gt;nullconsole.log(reg.exec('1')); //-&gt; 1 exec和match的区别 123456var str2 = 'gu123gu234gu4560';var reg2 = /gu(\\d+)/g;console.log(reg2.exec(str2)) //=&gt;[\"gu123\",\"123\"...]console.log(reg2.exec(str2)) //=&gt;[\"gu234\",\"234\"...]console.log(reg2.exec(str2)) //=&gt;[\"gu345\",\"345\"...]console.log(str2.match(reg2)) //=&gt;[\"gu123\",\"gu234\",\"gu345\"] 正则捕获 通过exec每一次捕获的时候都是先进行默认匹配,如果没有匹配成功的,捕获的结果是null;只有有匹配的内容我们才能捕获到 捕获的内容: 捕获到的内容是一个数组 数组中的第一项是当前正则捕获的内容 index : 捕获内容在字符串中开始的索引位置 input : 捕获的原始字符串 正则捕获特点: 懒惰性 : 每一次执行exec只捕获第一匹配内容,在不进行任何处理的情况下,再次执行多次捕获,捕获内容还是第一匹配的内容 lastIndex : 是正则每一次捕获在字符串中开始查找的位置, 默认值是0, 如果不做任何处理, 每一次值都是0, 可以加全局修饰符 g 改变该值; 贪婪性 : 正则每一次捕获都是按照匹配最长的结果捕获的, 符合正则条件时, 会完全捕获到 解决贪婪性, 在量词元字符后面加上?元字符 1234var reg = /\\d+?/g;var str = \"29839jlsafi78789\";//不加?结果:[\"29839\"...]console.log(reg.exec(str));//=&gt;[\"2\"...] 字符串方法match()可以直接获取到所有符合正则的内容, 不需要循环执行exec方法,但是match只能捕获大正则匹配的内容, 而对小正则捕获的内容是无法获取的(不能获取到分组的正则匹配) 正则分组 分组引用 1234// \\1代表和第一个分组一模一样的内容, \\2代表和第二个分组一模一样的内容, 和对应的分组中的内容的值都要一样var reg = /^(\\w)\\1(\\w)\\2$/;console.log(reg.test(\"ffzz\"));//trueconsole.log(reg.test(\"fzz_\"));//false 分组捕获 : 正则捕获的时候, 不仅仅把大正则匹配的内容捕获到, 而且还可以把小分组匹配的内容捕获到 123456789101112// 在分组中使用 ?: 是只匹配不捕获var str = '342622199501013638';var reg=/^(\\d&#123;2&#125;)(\\d&#123;4&#125;)(\\d&#123;4&#125;)(\\d&#123;2&#125;)(\\d&#123;2&#125;)(\\d&#123;2&#125;)(\\d)(?:\\d|X)$/;console.log(reg.exec(str));// =&gt; [\"342622199501013638\", \"34\", \"2622\", \"1995\", \"01\", \"01\", \"36\", \"3\", index: 0, input: \"342622199501013638\"]console.log(str.match(reg))//和上面效果相同var str2 = 'gu123gu234gu4560';var reg2 = /gu(\\d+)/g;console.log(reg2.exec(str2)) //=&gt;[\"gu123\",\"123\"...] console.log(reg2.exec(str2)) //=&gt;[\"gu234\",\"234\"...]console.log(reg2.exec(str2)) //=&gt;[\"gu345\",\"345\"...]console.log(str2.match(reg2)) //=&gt;[\"gu123\",\"gu234\",\"gu345\"] replace执行机制 1234567//和exec的机制相似var str = 'gu2893gu898gu674';var reg = /gu(\\d+)/g;str.replace(reg,function()&#123; //捕获几次, 执行几次密名函数 console.log(arguments) //arguments就是捕获到的值组成的类数组, 同样可以捕获到分组的内容 return 'gu捕获到了' //return的值就是要替换的值&#125;) 常用正则123456789101112131415161718192021222324252627282930313233343536//1.有效数字正则：正数,负数,0,小数//-&gt; \".\"可能出现, 可能不出现,出现后面必须跟一位或多位数字//-&gt; 最开始可以有+/-也可以没有//-&gt; 整数部分, 一位数也可以是0~9之间的一个, 多位数不能以0开头////注意：//-&gt; []中出现的所有字符只是自身字符的含义, 没有特殊含义var reg = /^[+-]?(\\d|[1-9]\\d+)(\\.\\d+)?$///2.年龄在18~65//-&gt; 18-19阶段//-&gt; 20-59阶段//-&gt; 60-65阶段////注意：//-&gt; []中不识别两位数//-&gt; [12] 1或者2//-&gt; [12-67] 1 , 2-6 , 7中的一个var reg = /^(1[8-9]|[2-5]\\d|6[0-5])$///3、验证邮箱的正则(简版)//左边：数字、字母、下环线、.、var reg=/^[\\w.-]+@[0-9a-zA-Z]+(\\.[a-zA-Z]&#123;2,4&#125;)&#123;1,2&#125;$/;console.log(reg.test('1229303942@qq.com'))//4、中国标准真实姓名2-4位汉字var reg = /^[\\u4e00-\\u9fa5]&#123;2,4&#125;$/;console.log(reg.test('顾连生'))//5、身份证号码//var reg=/^\\d&#123;17&#125;(\\d|X)$/;//13 0828 1990 12 04 06 1 7var str = '342622194502047680';var reg=/^(\\d&#123;2&#125;)(\\d&#123;4&#125;)(\\d&#123;4&#125;)(\\d&#123;2&#125;)(\\d&#123;2&#125;)(\\d&#123;2&#125;)(\\d)(\\d|X)$/;console.log(reg.exec(str));console.log(str.match(reg));","categories":[{"name":"JavaScript基础","slug":"JavaScript基础","permalink":"http://www.guliansheng.club/categories/JavaScript%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"js基础","slug":"js基础","permalink":"http://www.guliansheng.club/tags/js%E5%9F%BA%E7%A1%80/"},{"name":"正则表达式","slug":"正则表达式","permalink":"http://www.guliansheng.club/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"}]},{"title":"DOM基础","slug":"js基础/DOM基础","date":"2018-09-10T13:04:21.000Z","updated":"2018-09-24T04:12:48.116Z","comments":true,"path":"2018/09/10/js基础/DOM基础/","link":"","permalink":"http://www.guliansheng.club/2018/09/10/js%E5%9F%BA%E7%A1%80/DOM%E5%9F%BA%E7%A1%80/","excerpt":"本章节主要介绍DOM的相关操作和元素属性值设置 注：文中的[context]表示元素对象","text":"本章节主要介绍DOM的相关操作和元素属性值设置 注：文中的[context]表示元素对象 DOM元素获取方法 document.getElementById (一个元素对象) [context].getElementsByTagName (元素集合) [context].getElementsByClassName (元素集合) document.getElementsByName (节点集合[NodeList]) document.documentElement (获取整个HTML对象) document.body (获取整个BODY对象) document.head (获取整个HEAD对象) [context].querySelector (一个元素对象) [context].querySelectorAll (获取元素集合) 元素节点 元素节点 nodeType：1 nodeName：大写标签名（在部分浏览器的怪异模式下，我们写的标签名是小写，它获取的就是小写.…） nodeValue：null [curEle].tagName：获取当前元素的标签名（获取的标签名一般都是大写） 文本节点 nodeType：3 nodeName：#text nodeValue：文本内容 注释节点 nodeType：8 nodeName：#comment nodeValue：注释内容 文档节点 nodeType：9 nodeName：#document nodeValue：null 节点关系 previousSibling：获取当前节点的上一个哥哥节点（不一定是元素节点也可能是文本或者注释） nextSibling：获取当前节点的下一个弟弟节点 firstChild：当前元素所有子节点中的第一个（也不一定是元素节点，可能是文本和注释） lastChild：当前元素所有子节点中的最后一个 previousElementSibling：获取当前节点的上一个哥哥元素节点 nextElementSibling：获取当前节点的下一个弟弟元素节点 firstElementChild 第一个子元素节点 lastElementChild 最后一个子元素节点 获取[元素节点] (不是节点) 的方法都不兼容IE6~8; DOM渲染 回流(重排 reflow) ： 当页面中的HTML结构发生变化(增加，删除元素，位置发生变化…)，浏览器都需要重新计算一遍最新的DOM结构，重新对当前页面进行渲染 js中要尽量减少回流 重绘 ： 某一个元素的部分样式发生改变，浏览器只需要重新渲染当前元素即可 DOM映射机制 页面中的标签和js中获取到的元素对象(元素集合)是紧紧的绑定在一起的，页面中的HTML结构发生改变了，js中不需要重新获取，集合里面的内容也会跟着自动改变123456var oUl=document.getElementById(\"ul\");var oLis=oUl.getElementsByTagName(\"li\");console.log(oLis.length);//-&gt;6var oLi=document.createElement(\"li\");oUl.appendChild(oLi);console.log(oLis.length);//-&gt;7 没有重新的获取，但是oLis这个集合中的长度和内容会自动跟着发生改变 属性设置设置自定义属性方法的区别 xxx.index：是把当前操作的元素当做一个普通对象，为其设置一个属性名，和页面中的HTML标签没关系，不会在dom元素身上显示，但是可以在对象身上添加相应属性值 xxx.setAttribute：把元素当做特殊的元素对象来处理，设置的自定义属性是和页面结构中的DOM元素映射在一起的，可以在HTML结构中看到设置的属性，但是没有在对象身上添加相应属性 xxx.getAtrribute：获取通过setAttribute设置的属性 自定属性和元素自带属性 与页面HTML结构无关的普通对象 与页面HTML结构存在映射关系的元素对象 元素对象中的内置属性，大部分都和页面的标签存在映射关系 xxx.style.backgroundColor=’xxx’此时不仅把JS中对象对应的属性值改变了，而且也会映射到页面的HTML标签上（标签中有一个style行内样式、元素的样式改变了） xxx.className=’xxx’此时不仅是把对象中的属性值改了，而且页面中的标签增加了class样式类（可以看见的）","categories":[{"name":"JavaScript基础","slug":"JavaScript基础","permalink":"http://www.guliansheng.club/categories/JavaScript%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"js基础","slug":"js基础","permalink":"http://www.guliansheng.club/tags/js%E5%9F%BA%E7%A1%80/"},{"name":"DOM基础","slug":"DOM基础","permalink":"http://www.guliansheng.club/tags/DOM%E5%9F%BA%E7%A1%80/"},{"name":"元素属性设置","slug":"元素属性设置","permalink":"http://www.guliansheng.club/tags/%E5%85%83%E7%B4%A0%E5%B1%9E%E6%80%A7%E8%AE%BE%E7%BD%AE/"}]}]}